;
; ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ
; К	This file is generated by The Interactive Disassembler (IDA)	    К
; К	Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>	    К
; К			 Licensed to: Freeware version			    К
; ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ
;
;
; ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ
; К	This file is generated by The Interactive Disassembler (IDA)	    К
; К	Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>	    К
; К			 Licensed to: Freeware version			    К
; ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ
;
; Input	MD5   :	AC6EAFC1248CD9E88FD4BD4DA25BAE00

; File Name   :	C:\Users\Utilisateur\Desktop\daa2021\DAA2021\TestMalwareIno.exe
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00010000 (  65536.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	E00000A0: Text Bss Executable Readable Writable
; Alignment	: default


unicode		macro page,string,zero
		irpc c,<string>
		db '&c', page
		endm
		ifnb <zero>
		dw zero
		endif
endm

		.686p
		.mmx
		.model flat

; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
_textbss	segment	para public 'CODE' use32
		assume cs:_textbss
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		dd 4000h dup(?)
_textbss	ends

; Section 2. (virtual address 00011000)
; Virtual size			: 00007324 (  29476.)
; Section size in file		: 00007400 (  29696.)
; Offset to raw	data for section: 00000400
; Flags	60000020: Text Executable Readable
; Alignment	: default
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 411000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		dd 0CCCCCCCCh
		db 0CCh
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
; START	OF FUNCTION CHUNK FOR sub_412980

loc_411005:				; CODE XREF: sub_412980:loc_41298Bj
		jmp	sub_413770
; END OF FUNCTION CHUNK	FOR sub_412980

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41100A	proc near		; CODE XREF: .text:00413DECp
					; sub_413F70:loc_413F80p
		jmp	loc_415640
sub_41100A	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41100F	proc near		; CODE XREF: sub_412A20:loc_412A89p
		jmp	sub_414600
sub_41100F	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__crt_atexit. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BC9
; [00000005 BYTES: COLLAPSED FUNCTION j__cexit.	PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411023	proc near		; CODE XREF: sub_414B70+7p
		jmp	sub_414B50
sub_411023	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B81

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41102D	proc near		; CODE XREF: sub_411810+146p
		jmp	sub_4121D0
sub_41102D	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BDB

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411037	proc near		; CODE XREF: sub_412A20+14p
					; .text:00413E25p
		jmp	sub_413FD0
sub_411037	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41103C	proc near		; CODE XREF: sub_412EB0+3p
		jmp	sub_414550
sub_41103C	endp

; [00000005 BYTES: COLLAPSED FUNCTION std::uncaught_exception(void). PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411046	proc near		; CODE XREF: sub_4132B0+45p
		jmp	sub_413B50
sub_411046	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412770

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411050	proc near		; CODE XREF: sub_412A20:loc_412AB7p
		jmp	sub_4148C0
sub_411050	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411055	proc near		; CODE XREF: sub_412E90+4p
		jmp	sub_414540
sub_411055	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BA5

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41105F	proc near		; CODE XREF: sub_412110+6Fp
		jmp	sub_412020
sub_41105F	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412380
; [00000005 BYTES: COLLAPSED FUNCTION j_terminate. PRESS KEYPAD	"+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j_IsProcessorFeaturePresent. PRESS KEYPAD	"+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4139E0
; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_GetModuleFileNameW. PRESS KEYPAD	"+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j__initterm_e. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_4149A0
; [00000005 BYTES: COLLAPSED FUNCTION j_strlen.	PRESS KEYPAD "+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j___std_type_info_destroy_list. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BE1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C10
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126E7

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110A0	proc near		; CODE XREF: sub_414290+1Fp
		jmp	sub_415C40
sub_4110A0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4135D0

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110AA	proc near		; CODE XREF: .text:0041280Dp
					; .text:00412828p
		jmp	sub_412F90
sub_4110AA	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110AF	proc near		; CODE XREF: sub_412A20+53p
		jmp	sub_414680
sub_4110AF	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110B4	proc near		; CODE XREF: sub_412B50+D6p
		jmp	sub_414260
sub_4110B4	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C50
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4145A0

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110C3	proc near		; CODE XREF: .text:00413E93p
		jmp	sub_415C30
sub_4110C3	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__register_thread_local_exe_atexit_callback. PRESS KEYPAD "+" TO	EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110CD	proc near		; CODE XREF: .text:loc_413F2Bp
		jmp	sub_415C60
sub_4110CD	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110D2	proc near		; CODE XREF: sub_413770+FAp
					; sub_4138D0+C9p ...
		jmp	sub_413730
sub_4110D2	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110D7	proc near		; CODE XREF: .text:00413E53p
		jmp	sub_415C20
sub_4110D7	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__CrtDbgReportW.	PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C20
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_41270B

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110EB	proc near		; CODE XREF: sub_412A20+6Ep
		jmp	sub_414610
sub_4110EB	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110F0	proc near		; CODE XREF: .text:004138C5p
		jmp	sub_4138D0
sub_4110F0	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4110F5	proc near		; CODE XREF: sub_413D80+6p
					; .text:00413DE3p ...
		jmp	sub_415A40
sub_4110F5	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126E1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413E50

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411104	proc near		; CODE XREF: sub_411810+59p
		jmp	sub_412520
sub_411104	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__execute_onexit_table. PRESS KEYPAD "+"	TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41110E	proc near		; CODE XREF: sub_413F70+33p
					; sub_414290+2Cp
		jmp	sub_415C40
sub_41110E	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__c_exit. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BD5
; [00000005 BYTES: COLLAPSED FUNCTION j_memset.	PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411122	proc near		; CODE XREF: sub_411810+44Dp
		jmp	sub_412110
sub_411122	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412330
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41112C:				; CODE XREF: .text:004171EBj
					; .text:00417221j ...
		jmp	loc_415A6D
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413E20

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411136	proc near		; CODE XREF: sub_412A20+86p
		jmp	sub_4145C0
sub_411136	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__initialize_onexit_table. PRESS	KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412711
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BCF

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41114A	proc near		; CODE XREF: sub_4146D0+1Bp
					; sub_4146D0+129p
		jmp	sub_414A50
sub_41114A	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_GetModuleHandleW. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411154	proc near		; CODE XREF: sub_412B50+35p
		jmp	sub_413F70
sub_411154	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B8D

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41115E	proc near		; CODE XREF: sub_412660+43p
		jmp	sub_4122C0
sub_41115E	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B9F

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411168	proc near		; CODE XREF: sub_412A20+78p
		jmp	sub_414570
sub_411168	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___current_exception. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411172	proc near		; CODE XREF: sub_412A20+Dp
		jmp	sub_412E90
sub_411172	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411177	proc near		; CODE XREF: sub_413F70+15p
		jmp	sub_415C10
sub_411177	endp

; [00000005 BYTES: COLLAPSED FUNCTION j_strcat_s. PRESS	KEYPAD "+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j___stdio_common_vsprintf_s. PRESS KEYPAD	"+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126FF

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41118B	proc near		; CODE XREF: sub_412A20+2Cp
		jmp	sub_414A70
sub_41118B	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__exit. PRESS KEYPAD "+"	TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j___p___argc. PRESS KEYPAD "+" TO	EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j__wmakepath_s. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41119F	proc near		; CODE XREF: sub_4122C0+3Bp
		jmp	sub_412230
sub_41119F	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4138C0
; [00000005 BYTES: COLLAPSED FUNCTION TopLevelExceptionFilter. PRESS KEYPAD "+"	TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111AE	proc near		; CODE XREF: sub_412660+3Bp
		jmp	sub_4125B0
sub_4111AE	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111B3	proc near		; CODE XREF: sub_4132B0+36p
		jmp	sub_413B60
sub_4111B3	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___p__commode. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111BD	proc near		; CODE XREF: sub_413700+12p
		jmp	sub_4136C0
sub_4111BD	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412730
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412717

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111CC	proc near		; CODE XREF: sub_4136C0+3p
					; sub_414630+6p
		jmp	sub_4136B0
sub_4111CC	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B93

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111D6	proc near		; DATA XREF: .rdata:0041ACF0o
		jmp	sub_412A00
sub_4111D6	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413F50
; [00000005 BYTES: COLLAPSED FUNCTION j__set_new_mode. PRESS KEYPAD "+"	TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111E5	proc near		; CODE XREF: sub_412B50+DEp
		jmp	sub_4146B0
sub_4111E5	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__controlfp_s. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111EF	proc near		; CODE XREF: .text:004127BDp
					; sub_412880+41p
		jmp	sub_413120
sub_4111EF	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412705

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4111F9	proc near		; CODE XREF: sub_412B50+118p
					; sub_4132B0+141p ...
		jmp	sub_414B40
sub_4111F9	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___setusermatherr. PRESS	KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BC3

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411208	proc near		; CODE XREF: sub_411810+250p
					; sub_411810+3A3p
		jmp	sub_412460
sub_411208	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C70
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413DE0

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411217	proc near		; CODE XREF: sub_4122C0+33p
					; sub_4125B0+61p ...
		jmp	sub_411810
sub_411217	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41121C	proc near		; CODE XREF: sub_412B50+F2p
					; sub_412B50+135p
		jmp	sub_4140E0
sub_41121C	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BBD
; [00000005 BYTES: COLLAPSED FUNCTION j__initterm. PRESS KEYPAD	"+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_412650
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413BA0

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411235	proc near		; CODE XREF: sub_412B50+15Ap
					; sub_412B50+1C7p
		jmp	sub_4148D0
sub_411235	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__CrtDbgReport. PRESS KEYPAD "+"	TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_414B90

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411244	proc near		; CODE XREF: sub_411810+47Cp
					; sub_412F90+4Cp ...
		jmp	sub_412980
sub_411244	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___current_exception_context. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_414360
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BAB
; [00000005 BYTES: COLLAPSED FUNCTION j__seh_filter_dll. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41125D	proc near		; CODE XREF: sub_412B10+8p
		jmp	sub_414560
sub_41125D	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411262	proc near		; CODE XREF: sub_4129C0+20p
		jmp	sub_413BD0
sub_411262	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126F3
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_41271D
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_414860

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411276	proc near		; CODE XREF: .text:loc_413E63p
		jmp	sub_415C20
sub_411276	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41127B	proc near		; CODE XREF: sub_411810+49p
					; sub_411DF0+28p ...
		jmp	sub_412930
sub_41127B	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411280	proc near		; CODE XREF: sub_412A20+36p
		jmp	sub_4143B0
sub_411280	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411285	proc near		; CODE XREF: sub_411810+80p
					; sub_411810+BCp ...
		jmp	loc_4128F0
sub_411285	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413EB0

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41128F	proc near		; CODE XREF: sub_4143B0+8p
		jmp	sub_4142E0
sub_41128F	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C60

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411299	proc near		; CODE XREF: sub_412A20+92p
					; .text:loc_413E00p
		jmp	sub_412E10
sub_411299	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BB7

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112A3	proc near		; CODE XREF: sub_412B50:loc_412C71p
		jmp	sub_4146C0
sub_4112A3	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112A8	proc near		; CODE XREF: sub_411810+462p
		jmp	sub_412880
sub_4112A8	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112AD	proc near		; CODE XREF: sub_412B50+180p
		jmp	sub_414290
sub_4112AD	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BF9

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112B7	proc near		; CODE XREF: sub_4129C0+1Ap
					; sub_412A00+Ap
		jmp	sub_4129B0
sub_4112B7	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__crt_at_quick_exit. PRESS KEYPAD "+" TO	EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j_exit. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112C6	proc near		; CODE XREF: sub_412A20+73p
		jmp	sub_4145D0
sub_4112C6	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C30
; [00000005 BYTES: COLLAPSED FUNCTION j__wsplitpath_s. PRESS KEYPAD "+"	TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4130B0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4129A0
; [00000005 BYTES: COLLAPSED FUNCTION j__configure_narrow_argv.	PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112E4	proc near		; CODE XREF: sub_414AF0+9p
		jmp	sub_415C70
sub_4112E4	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112E9	proc near		; CODE XREF: sub_412A20+8p
		jmp	sub_412EB0
sub_4112E9	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B99
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	sub_415C40

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112F8	proc near		; CODE XREF: sub_412F90+B5p
					; sub_413200+44p
		jmp	sub_413700
sub_4112F8	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4112FD	proc near		; CODE XREF: .text:00413E6Fp
					; .text:00413E98p
		jmp	sub_415C30
sub_4112FD	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__set_fmode. PRESS KEYPAD "+" TO	EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411307	proc near		; CODE XREF: sub_412A20+9Cp
		jmp	sub_4148B0
sub_411307	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41130C	proc near		; DATA XREF: sub_412A20+31o
		jmp	sub_414AB0
sub_41130C	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411311	proc near		; CODE XREF: sub_412E20+2Ep
		jmp	sub_412660
sub_411311	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411316	proc near		; CODE XREF: sub_414630+21p
		jmp	sub_414620
sub_411316	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413F10

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411320	proc near		; CODE XREF: .text:00413F5Dp
		jmp	sub_415C50
sub_411320	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411325	proc near		; DATA XREF: .rdata:0041A9E4o
		jmp	sub_4129C0
sub_411325	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41132A	proc near		; CODE XREF: sub_412B30+3p
		jmp	sub_414480
sub_41132A	endp

; [00000005 BYTES: COLLAPSED FUNCTION j_strcpy_s. PRESS	KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413B90
; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_LoadLibraryExW. PRESS KEYPAD "+"	TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41133E	proc near		; CODE XREF: sub_413F70:loc_413F95p
		jmp	sub_415C10
sub_41133E	endp

; [00000005 BYTES: COLLAPSED FUNCTION j___p___argv. PRESS KEYPAD "+" TO	EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411348	proc near		; CODE XREF: sub_412A20+25p
					; sub_412A20+49p ...
		jmp	sub_4146D0
sub_411348	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126F9

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411352	proc near		; CODE XREF: sub_412A20:loc_412A6Ep
		jmp	sub_414580
sub_411352	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__register_onexit_function. PRESS KEYPAD	"+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41135C	proc near		; CODE XREF: sub_412DF0+3p
		jmp	sub_414530
sub_41135C	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B7B

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411366	proc near		; CODE XREF: sub_411810+237p
					; sub_411810+38Ap
		jmp	sub_4123D0
sub_411366	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_41136B	proc near		; CODE XREF: .text:00414B99p
		jmp	sub_414B70
sub_41136B	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411370	proc near		; DATA XREF: sub_412A20+5Co
		jmp	sub_414520
sub_411370	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415B87
; [00000005 BYTES: COLLAPSED FUNCTION j__seh_filter_exe. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126ED
; [00000005 BYTES: COLLAPSED FUNCTION j__initialize_narrow_environment.	PRESS KEYPAD "+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j__set_app_type. PRESS KEYPAD "+"	TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j__except_handler4_common. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_411393	proc near		; CODE XREF: .text:00413F55p
		jmp	sub_415C50
sub_411393	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BE7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_4126DB
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413E90

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113A7	proc near		; CODE XREF: sub_411810+137p
		jmp	sub_411EB0
sub_4113A7	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413B70
; [00000005 BYTES: COLLAPSED FUNCTION start. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113B6	proc near		; CODE XREF: sub_412A20+3Ep
					; .text:loc_413DF3p
		jmp	sub_412DF0
sub_4113B6	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BF3
; [00000005 BYTES: COLLAPSED FUNCTION j_wcscpy_s. PRESS	KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BFF

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113CA	proc near		; CODE XREF: sub_412B10+3p
		jmp	sub_414980
sub_4113CA	endp

; [00000005 BYTES: COLLAPSED FUNCTION j__configthreadlocale. PRESS KEYPAD "+" TO EXPAND]
; [00000005 BYTES: COLLAPSED FUNCTION j__get_initial_narrow_environment. PRESS KEYPAD "+" TO EXPAND]

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113D9	proc near		; CODE XREF: sub_412A20+3p
		jmp	sub_412E70
sub_4113D9	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113DE	proc near		; CODE XREF: sub_411EB0+53p
		jmp	sub_411DF0
sub_4113DE	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113E3	proc near		; CODE XREF: sub_4148B0+3p
		jmp	sub_4149A0
sub_4113E3	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_415BED

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113ED	proc near		; CODE XREF: sub_412B00+3p
		jmp	sub_414630
sub_4113ED	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113F2	proc near		; CODE XREF: sub_413D80:loc_413D93p
		jmp	sub_413D70
sub_4113F2	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113F7	proc near		; CODE XREF: sub_412B50+56p
		jmp	sub_413D80
sub_4113F7	endp


; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: thunk

sub_4113FC	proc near		; CODE XREF: sub_4132B0+110p
		jmp	sub_415160
sub_4113FC	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	loc_413C00
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 102h	dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_411810	proc near		; CODE XREF: sub_411217j

var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_148		= dword	ptr -148h
var_13C		= dword	ptr -13Ch
var_130		= dword	ptr -130h
var_124		= dword	ptr -124h
var_118		= dword	ptr -118h
var_4C		= dword	ptr -4Ch
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_4171C8
		mov	eax, large fs:0
		push	eax
		push	ecx
		sub	esp, 154h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_164]
		mov	ecx, 55h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_14], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_10], esp
		mov	ecx, offset dword_41E028
		call	sub_41127B
		mov	[ebp+var_1C], 0
		mov	eax, [ebp+arg_4]
		push	eax
		call	sub_411104
		add	esp, 4
		xor	ecx, ecx
		mov	[ebp+var_2C], eax
		mov	[ebp+var_28], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?width@ios_base@std@@QBE_JXZ	; std::ios_base::width(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_154], eax
		mov	[ebp+var_150], edx
		cmp	[ebp+var_150], 0
		jl	short loc_411923
		jg	short loc_4118B5
		cmp	[ebp+var_154], 0
		jbe	short loc_411923

loc_4118B5:				; CODE XREF: sub_411810+9Aj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?width@ios_base@std@@QBE_JXZ	; std::ios_base::width(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_15C], eax
		mov	[ebp+var_158], edx
		mov	eax, [ebp+var_158]
		cmp	eax, [ebp+var_28]
		jl	short loc_411923
		jg	short loc_4118F5
		mov	ecx, [ebp+var_15C]
		cmp	ecx, [ebp+var_2C]
		jbe	short loc_411923

loc_4118F5:				; CODE XREF: sub_411810+D8j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		add	ecx, [eax+4]
		mov	esi, esp
		call	ds:?width@ios_base@std@@QBE_JXZ	; std::ios_base::width(void)
		cmp	esi, esp
		call	sub_411285
		sub	eax, [ebp+var_2C]
		sbb	edx, [ebp+var_28]
		mov	[ebp+var_164], eax
		mov	[ebp+var_160], edx
		jmp	short loc_41192E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411923:				; CODE XREF: sub_411810+98j
					; sub_411810+A3j ...
		xorps	xmm0, xmm0
		movlpd	oword ptr [ebp+var_164], xmm0

loc_41192E:				; CODE XREF: sub_411810+111j
		mov	ecx, [ebp+var_164]
		mov	[ebp+var_3C], ecx
		mov	edx, [ebp+var_160]
		mov	[ebp+var_38], edx
		mov	eax, [ebp+arg_0]
		push	eax
		lea	ecx, [ebp+var_4C]
		call	sub_4113A7
		mov	[ebp+var_4], 0
		lea	ecx, [ebp+var_4C]
		call	sub_41102D
		movzx	eax, al
		test	eax, eax
		jnz	short loc_411970
		mov	eax, [ebp+var_1C]
		or	eax, 4
		mov	[ebp+var_1C], eax
		jmp	loc_411C2A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411970:				; CODE XREF: sub_411810+150j
		mov	byte ptr [ebp+var_4], 1
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?flags@ios_base@std@@QBEHXZ ; std::ios_base::flags(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_150], eax
		mov	eax, [ebp+var_150]
		and	eax, 1C0h
		cmp	eax, 40h
		jz	loc_411A7F
		jmp	short loc_4119BE
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4119AC:				; CODE XREF: sub_411810:loc_411A7Aj
		mov	eax, [ebp+var_3C]
		sub	eax, 1
		mov	ecx, [ebp+var_38]
		sbb	ecx, 0
		mov	[ebp+var_3C], eax
		mov	[ebp+var_38], ecx

loc_4119BE:				; CODE XREF: sub_411810+19Aj
		cmp	[ebp+var_38], 0
		jl	loc_411A7F
		jg	short loc_4119D4
		cmp	[ebp+var_3C], 0
		jbe	loc_411A7F

loc_4119D4:				; CODE XREF: sub_411810+1B8j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char>>::fill(void)
		cmp	esi, esp
		call	sub_411285
		mov	byte ptr [ebp+var_150+3], al
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_154], eax
		mov	esi, esp
		movzx	eax, byte ptr [ebp+var_150+3]
		push	eax
		mov	ecx, [ebp+var_154]
		call	ds:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_158], eax
		mov	ecx, [ebp+var_158]
		mov	[ebp+var_118], ecx
		call	sub_411366
		mov	[ebp+var_124], eax
		lea	edx, [ebp+var_118]
		push	edx
		lea	eax, [ebp+var_124]
		push	eax
		call	sub_411208
		add	esp, 8
		movzx	ecx, al
		test	ecx, ecx
		jz	short loc_411A7A
		mov	eax, [ebp+var_1C]
		or	eax, 4
		mov	[ebp+var_1C], eax
		jmp	short loc_411A7F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411A7A:				; CODE XREF: sub_411810+25Dj
		jmp	loc_4119AC
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411A7F:				; CODE XREF: sub_411810+194j
					; sub_411810+1B2j ...
		cmp	[ebp+var_1C], 0
		jnz	short loc_411AF3
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_150], eax
		mov	esi, esp
		mov	eax, [ebp+var_28]
		push	eax
		mov	ecx, [ebp+var_2C]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	ecx, [ebp+var_150]
		call	ds:?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ;	std::basic_streambuf<char,std::char_traits<char>>::sputn(char const *,__int64)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_158], eax
		mov	[ebp+var_154], edx
		mov	eax, [ebp+var_158]
		cmp	eax, [ebp+var_2C]
		jnz	short loc_411AEA
		mov	ecx, [ebp+var_154]
		cmp	ecx, [ebp+var_28]
		jz	short loc_411AF3

loc_411AEA:				; CODE XREF: sub_411810+2CDj
		mov	eax, [ebp+var_1C]
		or	eax, 4
		mov	[ebp+var_1C], eax

loc_411AF3:				; CODE XREF: sub_411810+273j
					; sub_411810+2D8j
		cmp	[ebp+var_1C], 0
		jnz	loc_411BD2
		jmp	short loc_411B11
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411AFF:				; CODE XREF: sub_411810:loc_411BCDj
		mov	eax, [ebp+var_3C]
		sub	eax, 1
		mov	ecx, [ebp+var_38]
		sbb	ecx, 0
		mov	[ebp+var_3C], eax
		mov	[ebp+var_38], ecx

loc_411B11:				; CODE XREF: sub_411810+2EDj
		cmp	[ebp+var_38], 0
		jl	loc_411BD2
		jg	short loc_411B27
		cmp	[ebp+var_3C], 0
		jbe	loc_411BD2

loc_411B27:				; CODE XREF: sub_411810+30Bj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char>>::fill(void)
		cmp	esi, esp
		call	sub_411285
		mov	byte ptr [ebp+var_150+3], al
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_154], eax
		mov	esi, esp
		movzx	eax, byte ptr [ebp+var_150+3]
		push	eax
		mov	ecx, [ebp+var_154]
		call	ds:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_158], eax
		mov	ecx, [ebp+var_158]
		mov	[ebp+var_130], ecx
		call	sub_411366
		mov	[ebp+var_13C], eax
		lea	edx, [ebp+var_130]
		push	edx
		lea	eax, [ebp+var_13C]
		push	eax
		call	sub_411208
		add	esp, 8
		movzx	ecx, al
		test	ecx, ecx
		jz	short loc_411BCD
		mov	eax, [ebp+var_1C]
		or	eax, 4
		mov	[ebp+var_1C], eax
		jmp	short loc_411BD2
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411BCD:				; CODE XREF: sub_411810+3B0j
		jmp	loc_411AFF
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411BD2:				; CODE XREF: sub_411810+2E7j
					; sub_411810+305j ...
		mov	esi, esp
		push	0
		push	0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	ecx, edx
		call	ds:?width@ios_base@std@@QAE_J_J@Z ; std::ios_base::width(__int64)
		cmp	esi, esp
		call	sub_411285
		jmp	short loc_411C1A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411BF4:				; DATA XREF: .rdata:0041AF7Co
		mov	esi, esp
		push	1
		push	4
		mov	eax, [ebp+8]
		mov	ecx, [eax]
		mov	edx, [ebp+8]
		add	edx, [ecx+4]
		mov	ecx, edx
		call	ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z	; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
		cmp	esi, esp
		call	sub_411285
		mov	eax, offset loc_411C23
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411C1A:				; CODE XREF: sub_411810+3E2j
		mov	[ebp+var_4], 0
		jmp	short loc_411C2A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411C23:				; DATA XREF: sub_411810+404o
		mov	dword ptr [ebp-4], 0

loc_411C2A:				; CODE XREF: sub_411810+15Bj
					; sub_411810+411j
		mov	esi, esp
		push	0
		mov	eax, [ebp+var_1C]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		add	ecx, [edx+4]
		call	ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z	; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
		cmp	esi, esp
		call	sub_411285
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_148], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_4C]
		call	sub_411122
		mov	eax, [ebp+var_148]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, dword_411CA4
		call	sub_4112A8
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_14]
		xor	ecx, ebp
		call	sub_411244
		add	esp, 164h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_411810	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
dword_411CA4	dd 1			; DATA XREF: sub_411810+45Co
		dd offset dword_411CAC
dword_411CAC	dd 0FFFFFFB4h, 8	; DATA XREF: .text:00411CA8o
		dd offset dword_411CB8
dword_411CB8	dd 6B4F5Fh, 4Dh	dup(0CCCCCCCCh)	; DATA XREF: .text:00411CB4o

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_411DF0	proc near		; CODE XREF: sub_4113DEj

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, offset dword_41E028
		call	sub_41127B
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_DC], ecx
		mov	edx, [ebp+var_DC]
		mov	eax, [edx]
		mov	ecx, [ebp+var_DC]
		add	ecx, [eax+4]
		mov	esi, esp
		call	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_411E6F
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+4]
		call	eax
		cmp	esi, esp
		call	sub_411285

loc_411E6F:				; CODE XREF: sub_411DF0+67j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn	4
sub_411DF0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 0Ah dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_411EB0	proc near		; CODE XREF: sub_4113A7j

var_E4		= dword	ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_417208
		mov	eax, large fs:0
		push	eax
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 36h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	ecx, offset dword_41E028
		call	sub_41127B
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		call	sub_4113DE
		mov	[ebp+var_4], 0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?good@ios_base@std@@QBE_NXZ ; std::ios_base::good(void)
		cmp	esi, esp
		call	sub_411285
		movzx	eax, al
		test	eax, eax
		jnz	short loc_411F3B
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax+4], 0
		jmp	short loc_411FA5
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411F3B:				; CODE XREF: sub_411EB0+80j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char>>::tie(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_411F68
		mov	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_411F71

loc_411F68:				; CODE XREF: sub_411EB0+AEj
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax+4], 1
		jmp	short loc_411FA5
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_411F71:				; CODE XREF: sub_411EB0+B6j
		mov	esi, esp
		mov	ecx, [ebp+var_20]
		call	ds:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
		cmp	esi, esp
		call	sub_411285
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	edx, [ecx+4]
		mov	esi, esp
		mov	ecx, edx
		call	ds:?good@ios_base@std@@QBE_NXZ ; std::ios_base::good(void)
		cmp	esi, esp
		call	sub_411285
		mov	ecx, [ebp+var_14]
		mov	[ecx+4], al

loc_411FA5:				; CODE XREF: sub_411EB0+89j
					; sub_411EB0+BFj
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn	4
sub_411EB0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 14h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412020	proc near		; CODE XREF: sub_41105Fj

var_E8		= dword	ptr -0E8h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_417230
		mov	eax, large fs:0
		push	eax
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E8]
		mov	ecx, 37h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	ecx, offset dword_41E028
		call	sub_41127B
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		mov	[ebp+var_E8], ecx
		mov	edx, [ebp+var_E8]
		mov	eax, [edx]
		mov	ecx, [ebp+var_E8]
		add	ecx, [eax+4]
		mov	esi, esp
		call	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
		cmp	esi, esp
		call	sub_411285
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_4120B6
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_20]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	sub_411285

loc_4120B6:				; CODE XREF: sub_412020+7Ej
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412020	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Eh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412110	proc near		; CODE XREF: sub_411122j

var_D8		= dword	ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_417260
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	ecx, offset dword_41E028
		call	sub_41127B
		call	j_?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
		movzx	eax, al
		test	eax, eax
		jnz	short loc_41217C
		mov	esi, esp
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		call	ds:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ;	std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
		cmp	esi, esp
		call	sub_411285

loc_41217C:				; CODE XREF: sub_412110+56j
		mov	ecx, [ebp+var_14]
		call	sub_41105F
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412110	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Bh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4121D0	proc near		; CODE XREF: sub_41102Dj

var_CC		= dword	ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, offset dword_41E028
		call	sub_41127B
		mov	eax, [ebp+var_8]
		mov	al, [eax+4]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_4121D0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 6 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412230	proc near		; CODE XREF: sub_41119Fj

var_D8		= dword	ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		mov	[ebp+var_8], 0
		mov	[ebp+var_14], 0
		jmp	short loc_412271
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412268:				; CODE XREF: sub_412230+53j
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_412271:				; CODE XREF: sub_412230+36j
		cmp	[ebp+var_14], 32h
		jge	short loc_412285
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		lea	edx, [ecx+eax*2]
		mov	[ebp+var_8], edx
		jmp	short loc_412268
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412285:				; CODE XREF: sub_412230+45j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412230	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 9 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4122C0	proc near		; CODE XREF: sub_41115Ej

var_C0		= dword	ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		push	offset aSimultanIe ; "simultanУЉe\n"
		mov	eax, ds:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
		push	eax
		call	sub_411217
		add	esp, 8
		call	sub_41119F
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_4122C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 7 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412330:				; CODE XREF: .text:00411127j
		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp-0C0h]
		mov	ecx, 30h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412380:				; CODE XREF: .text:00411064j
		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp-0C0h]
		mov	ecx, 30h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4123D0	proc near		; CODE XREF: sub_411366j

var_CC		= dword	ptr -0CCh
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_417290
		mov	eax, large fs:0
		push	eax
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 30h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	ecx, offset dword_41E018
		call	sub_41127B
		or	eax, 0FFFFFFFFh
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_4123D0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 9 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412460	proc near		; CODE XREF: sub_411208j

var_D0		= dword	ptr -0D0h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_4172C0
		mov	eax, large fs:0
		push	eax
		sub	esp, 0C4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D0]
		mov	ecx, 31h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	ecx, offset dword_41E018
		call	sub_41127B
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	edx, [eax]
		cmp	edx, [ecx]
		jnz	short loc_4124BF
		mov	[ebp+var_D0], 1
		jmp	short loc_4124C9
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4124BF:				; CODE XREF: sub_412460+51j
		mov	[ebp+var_D0], 0

loc_4124C9:				; CODE XREF: sub_412460+5Dj
		mov	al, byte ptr [ebp+var_D0]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412460	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 0Ch dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

; int __cdecl sub_412520(char *)
sub_412520	proc near		; CODE XREF: sub_411104j

var_CC		= dword	ptr -0CCh
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset loc_4172F0
		mov	eax, large fs:0
		push	eax
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 30h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword_41C004
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	ecx, offset dword_41E018
		call	sub_41127B
		mov	eax, [ebp+arg_0]
		push	eax		; char *
		call	j_strlen
		add	esp, 4
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412520	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 7 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4125B0	proc near		; CODE XREF: sub_4111AEj

var_D8		= dword	ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		mov	[ebp+var_14], 0
		mov	[ebp+var_8], 1
		jmp	short loc_4125F1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4125E8:				; CODE XREF: sub_4125B0+54j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_4125F1:				; CODE XREF: sub_4125B0+36j
		cmp	[ebp+var_8], 13h
		jg	short loc_412606
		mov	eax, [ebp+var_8]
		imul	eax, [ebp+var_8]
		add	eax, [ebp+var_14]
		mov	[ebp+var_14], eax
		jmp	short loc_4125E8
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412606:				; CODE XREF: sub_4125B0+45j
		push	offset aJuniorALaProd ;	"junior	a la prod\n"
		mov	eax, ds:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
		push	eax
		call	sub_411217
		add	esp, 8
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_4125B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 8 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412650:				; CODE XREF: .text:0041122Bj
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412660	proc near		; CODE XREF: sub_411311j

var_CC		= dword	ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, offset word_41E026
		call	sub_41127B
		push	offset aEnChelou ; "en chelou"
		mov	eax, ds:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
		push	eax
		call	sub_411217
		add	esp, 8
		call	sub_4111AE
		mov	[ebp+var_8], eax
		call	sub_41115E
		xor	eax, eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	sub_411285
		mov	esp, ebp
		pop	ebp
		retn
sub_412660	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 5 dup(0CCCCCCCCh)
		db 0CCh
; [00000006 BYTES: COLLAPSED FUNCTION std::uncaught_exception(void). PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126DB:				; CODE XREF: .text:0041139Dj
		jmp	ds:?good@ios_base@std@@QBE_NXZ ; std::ios_base::good(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126E1:				; CODE XREF: .text:004110FAj
		jmp	ds:?flags@ios_base@std@@QBEHXZ ; std::ios_base::flags(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126E7:				; CODE XREF: .text:0041109Bj
		jmp	ds:?width@ios_base@std@@QBE_JXZ	; std::ios_base::width(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126ED:				; CODE XREF: .text:0041137Fj
		jmp	ds:?width@ios_base@std@@QAE_J_J@Z ; std::ios_base::width(__int64)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126F3:				; CODE XREF: .text:00411267j
		jmp	ds:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126F9:				; CODE XREF: .text:0041134Dj
		jmp	ds:?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ;	std::basic_streambuf<char,std::char_traits<char>>::sputn(char const *,__int64)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4126FF:				; CODE XREF: .text:00411186j
		jmp	ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z	; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412705:				; CODE XREF: .text:004111F4j
		jmp	ds:?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char>>::tie(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41270B:				; CODE XREF: .text:004110E6j
		jmp	ds:?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ	; std::basic_ios<char,std::char_traits<char>>::rdbuf(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412711:				; CODE XREF: .text:00411140j
		jmp	ds:?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char>>::fill(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412717:				; CODE XREF: .text:004111C7j
		jmp	ds:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ;	std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41271D:				; CODE XREF: .text:0041126Cj
		jmp	ds:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_412730:				; CODE XREF: .text:004111C2j
		push	ebp
		mov	ebp, esp
		push	ebx
		push	esi
		mov	esi, ecx
		mov	ebx, edx
		test	esi, esi
		jz	short loc_41275C
		test	ebx, ebx
		jz	short loc_41275C
		mov	edx, [ebp+8]
		test	edx, edx
		jz	short loc_41275C
		push	edi
		mov	al, 0CCh
		mov	edi, esi
		mov	ecx, ebx
		rep stosb
		mov	eax, [edx]
		mov	[esi+4], eax
		mov	[esi+0Ch], ebx
		mov	[edx], esi
		pop	edi

loc_41275C:				; CODE XREF: .text:0041273Bj
					; .text:0041273Fj ...
		pop	esi
		pop	ebx
		pop	ebp
		retn	4
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_412770:				; CODE XREF: .text:0041104Bj
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		mov	ebx, edx
		mov	[ebp-4], ecx
		push	esi
		push	edi
		test	ebx, ebx
		jz	short loc_4127CD
		xor	esi, esi
		cmp	[ebx], esi
		jle	short loc_4127CD
		xor	edi, edi
		jmp	short loc_412790
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_412790:				; CODE XREF: .text:00412788j
					; .text:004127CBj
		mov	ecx, [ebx+4]
		mov	eax, [ebp-4]
		mov	edx, [ecx+edi]
		cmp	dword ptr [edx+eax-4], 0CCCCCCCCh
		jnz	short loc_4127B5
		mov	eax, [ecx+edi+4]
		add	eax, edx
		mov	edx, [ebp-4]
		cmp	dword ptr [eax+edx], 0CCCCCCCCh
		jz	short loc_4127C5

loc_4127B5:				; CODE XREF: .text:004127A1j
		push	dword ptr [ecx+edi+8]
		mov	eax, [ebp+4]
		push	eax
		call	sub_4111EF
		add	esp, 8

loc_4127C5:				; CODE XREF: .text:004127B3j
		inc	esi
		add	edi, 0Ch
		cmp	esi, [ebx]
		jl	short loc_412790

loc_4127CD:				; CODE XREF: .text:0041277Ej
					; .text:00412784j
		mov	esi, [ebp+8]
		xor	edi, edi
		mov	eax, esi
		test	esi, esi
		jz	short loc_412838

loc_4127D8:				; CODE XREF: .text:004127DEj
		mov	eax, [eax+4]
		inc	edi
		test	eax, eax
		jnz	short loc_4127D8
		test	esi, esi
		jz	short loc_412838

loc_4127E4:				; CODE XREF: .text:00412836j
		cmp	dword ptr [esi], 0CCCCCCCCh
		jnz	short loc_412807
		cmp	dword ptr [esi+14h], 0CCCCCCCCh
		jnz	short loc_412807
		cmp	dword ptr [esi+18h], 0CCCCCCCCh
		jnz	short loc_412807
		cmp	dword ptr [esi+1Ch], 0CCCCCCCCh
		jz	short loc_412815

loc_412807:				; CODE XREF: .text:004127EAj
					; .text:004127F3j ...
		mov	eax, [ebp+4]
		push	edi
		push	esi
		push	eax
		call	sub_4110AA
		add	esp, 0Ch

loc_412815:				; CODE XREF: .text:00412805j
		mov	eax, [esi+0Ch]
		cmp	dword ptr [eax+esi-4], 0CCCCCCCCh
		jz	short loc_412830
		mov	eax, [ebp+4]
		push	edi
		push	esi
		push	eax
		call	sub_4110AA
		add	esp, 0Ch

loc_412830:				; CODE XREF: .text:00412820j
		mov	esi, [esi+4]
		dec	edi
		test	esi, esi
		jnz	short loc_4127E4

loc_412838:				; CODE XREF: .text:004127D6j
					; .text:004127E2j
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Fh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412880	proc near		; CODE XREF: sub_4112A8j

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		mov	ebx, edx
		mov	[ebp+var_4], ecx
		push	esi
		xor	esi, esi
		cmp	[ebx], esi
		jle	short loc_4128D2
		push	edi
		xor	edi, edi

loc_412894:				; CODE XREF: sub_412880+4Fj
		mov	ecx, [ebx+4]
		mov	eax, [ebp+var_4]
		mov	edx, [ecx+edi]
		cmp	dword ptr [edx+eax-4], 0CCCCCCCCh
		jnz	short loc_4128B9
		mov	eax, [ecx+edi+4]
		add	eax, edx
		mov	edx, [ebp+var_4]
		cmp	dword ptr [eax+edx], 0CCCCCCCCh
		jz	short loc_4128C9

loc_4128B9:				; CODE XREF: sub_412880+25j
		push	dword ptr [ecx+edi+8]
		mov	eax, [ebp+4]
		push	eax
		call	sub_4111EF
		add	esp, 8

loc_4128C9:				; CODE XREF: sub_412880+37j
		inc	esi
		add	edi, 0Ch
		cmp	esi, [ebx]
		jl	short loc_412894
		pop	edi

loc_4128D2:				; CODE XREF: sub_412880+Fj
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_412880	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 6 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4128F0:				; CODE XREF: sub_411285j
		repne jnz short	loc_4128F5
		repne retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4128F5:				; CODE XREF: .text:loc_4128F0j
		push	ebp
		mov	ebp, esp
		sub	esp, 0
		push	eax
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 4041B0Fh, 57565352h,	6A04458Bh, 0C6E85000h, 83FFFFE9h
		dd 5E5F08C4h, 0F585A5Bh, 0FC04441Ah, 0F25DE58Bh, 0CCCCCCC3h
		dd 3 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412930	proc near		; CODE XREF: sub_41127Bj

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	[ebp+var_4], ecx
		mov	eax, [ebp+var_4]
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_4]
		movzx	edx, byte ptr [ecx]
		test	edx, edx
		jz	short loc_412961
		cmp	dword_41C594, 0
		jz	short loc_412961
		call	ds:GetCurrentThreadId
		cmp	dword_41C594, eax
		jnz	short loc_412961
		nop

loc_412961:				; CODE XREF: sub_412930+17j
					; sub_412930+20j ...
		mov	esp, ebp
		pop	ebp
		retn
sub_412930	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 6 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_412980	proc near		; CODE XREF: sub_411244j

; FUNCTION CHUNK AT 00411005 SIZE 00000005 BYTES

		cmp	ecx, dword_41C004
		repne jnz short	loc_41298B
		repne retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41298B:				; CODE XREF: sub_412980+6j
		repne jmp loc_411005
sub_412980	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_4129A0:				; CODE XREF: .text:004112DAj
		mov	eax, offset j__CrtDbgReport
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_4129B0	proc near		; CODE XREF: sub_4112B7j
		mov	eax, offset j__CrtDbgReportW
		retn
sub_4129B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_4129C0	proc near		; CODE XREF: sub_411325j
		cmp	byte_41C138, 0
		jnz	short locret_4129E8
		push	0
		push	1
		push	0
		push	0
		push	0
		mov	byte_41C138, 1
		call	sub_4112B7
		push	eax
		call	sub_411262
		add	esp, 18h

locret_4129E8:				; CODE XREF: sub_4129C0+7j
		retn
sub_4129C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_412A00	proc near		; CODE XREF: sub_4111D6j
		push	1
		push	1
		push	0
		push	0
		push	0
		call	sub_4112B7
		add	esp, 14h
		retn
sub_412A00	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412A20	proc near		; DATA XREF: .rdata:00419410o
		push	ebp
		mov	ebp, esp
		call	sub_4113D9
		call	sub_4112E9
		call	sub_411172
		push	1
		call	sub_411037
		add	esp, 4
		movzx	eax, al
		test	eax, eax
		jnz	short loc_412A4A
		push	7
		call	sub_411348

loc_412A4A:				; CODE XREF: sub_412A20+21j
		fnclex
		call	sub_41118B
		push	offset sub_41130C
		call	sub_411280
		add	esp, 4
		call	sub_4113B6
		test	eax, eax
		jz	short loc_412A6E
		push	7
		call	sub_411348

loc_412A6E:				; CODE XREF: sub_412A20+45j
		call	sub_411352
		call	sub_4110AF
		test	eax, eax
		jz	short loc_412A89
		push	offset sub_411370
		call	j___setusermatherr
		add	esp, 4

loc_412A89:				; CODE XREF: sub_412A20+5Aj
		call	sub_41100F
		call	sub_4110EB
		call	sub_4112C6
		call	sub_411168
		push	eax
		call	j__configthreadlocale
		add	esp, 4
		call	sub_411136
		movzx	ecx, al
		test	ecx, ecx
		jz	short loc_412AB7
		call	sub_411299

loc_412AB7:				; CODE XREF: sub_412A20+90j
		call	sub_411050
		call	sub_411307
		test	eax, eax
		jz	short loc_412ACC
		push	7
		call	sub_411348

loc_412ACC:				; CODE XREF: sub_412A20+A3j
		xor	eax, eax
		pop	ebp
		retn
sub_412A20	endp ; sp = -0Ch

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 0Ch dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412B00	proc near		; DATA XREF: .rdata:00419514o
		push	ebp
		mov	ebp, esp
		call	sub_4113ED
		xor	eax, eax
		pop	ebp
		retn
sub_412B00	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412B10	proc near		; DATA XREF: .rdata:00419104o
		push	ebp
		mov	ebp, esp
		call	sub_4113CA
		call	sub_41125D
		push	eax
		call	j__set_new_mode
		add	esp, 4
		pop	ebp
		retn
sub_412B10	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412B30	proc near		; CODE XREF: sub_412ED0+3p
		push	ebp
		mov	ebp, esp
		call	sub_41132A
		call	sub_412B50
		pop	ebp
		retn
sub_412B30	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412B50	proc near		; CODE XREF: sub_412B30+8p

var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFEh
		push	offset dword_41B060
		push	offset sub_414AF0
		mov	eax, large fs:0
		push	eax
		add	esp, 0FFFFFFCCh
		push	ebx
		push	esi
		push	edi
		mov	eax, dword_41C004
		xor	[ebp+var_8], eax
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_10]
		mov	large fs:0, eax
		mov	[ebp+var_18], esp
		push	1
		call	sub_411154
		add	esp, 4
		movzx	eax, al
		test	eax, eax
		jnz	short loc_412B9B
		push	7
		call	sub_411348

loc_412B9B:				; CODE XREF: sub_412B50+42j
		mov	[ebp+var_19], 0
		mov	[ebp+var_4], 0
		call	sub_4113F7
		mov	[ebp+var_1A], al
		cmp	dword_41C518, 1
		jnz	short loc_412BC0
		push	7
		call	sub_411348
		jmp	short loc_412C21
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412BC0:				; CODE XREF: sub_412B50+65j
		cmp	dword_41C518, 0
		jnz	short loc_412C1D
		mov	dword_41C518, 1
		push	offset dword_419618
		push	offset dword_41930C
		call	j__initterm_e
		add	esp, 8
		test	eax, eax
		jz	short loc_412BFF
		mov	[ebp+var_38], 0FFh
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	eax, [ebp+var_38]
		jmp	loc_412D52
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412BFF:				; CODE XREF: sub_412B50+97j
		push	offset dword_419208
		push	offset dword_419000
		call	j__initterm
		add	esp, 8
		mov	dword_41C518, 2
		jmp	short loc_412C21
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412C1D:				; CODE XREF: sub_412B50+77j
		mov	[ebp+var_19], 1

loc_412C21:				; CODE XREF: sub_412B50+6Ej
					; sub_412B50+CBj
		movzx	ecx, [ebp+var_1A]
		push	ecx
		call	sub_4110B4
		add	esp, 4
		call	sub_4111E5
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		cmp	dword ptr [edx], 0
		jz	short loc_412C71
		mov	eax, [ebp+var_20]
		push	eax
		call	sub_41121C
		add	esp, 4
		movzx	ecx, al
		test	ecx, ecx
		jz	short loc_412C71
		mov	edx, [ebp+var_20]
		mov	eax, [edx]
		mov	[ebp+var_3C], eax
		push	0
		push	2
		push	0		; int
		mov	ecx, [ebp+var_3C]
		mov	[ebp+var_28], ecx
		mov	ecx, [ebp+var_28]
		call	ds:off_41F000
		call	[ebp+var_28]

loc_412C71:				; CODE XREF: sub_412B50+ECj
					; sub_412B50+FFj
		call	sub_4112A3
		mov	[ebp+var_24], eax
		mov	edx, [ebp+var_24]
		cmp	dword ptr [edx], 0
		jz	short loc_412CA2
		mov	eax, [ebp+var_24]
		push	eax
		call	sub_41121C
		add	esp, 4
		movzx	ecx, al
		test	ecx, ecx
		jz	short loc_412CA2
		mov	edx, [ebp+var_24]
		mov	eax, [edx]
		push	eax
		call	j__register_thread_local_exe_atexit_callback
		add	esp, 4

loc_412CA2:				; CODE XREF: sub_412B50+12Fj
					; sub_412B50+142j
		call	sub_412E20
		mov	[ebp+var_2C], eax
		call	sub_411235
		movzx	ecx, al
		test	ecx, ecx
		jnz	short loc_412CBF
		mov	edx, [ebp+var_2C]
		push	edx		; int
		call	j_exit
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412CBF:				; CODE XREF: sub_412B50+164j
		movzx	eax, [ebp+var_19]
		test	eax, eax
		jnz	short loc_412CCC
		call	j__cexit

loc_412CCC:				; CODE XREF: sub_412B50+175j
		push	0
		push	1
		call	sub_4112AD
		add	esp, 8
		mov	ecx, [ebp+var_2C]
		mov	[ebp+var_40], ecx
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	eax, [ebp+var_40]
		jmp	short loc_412D52
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		mov	dword ptr [ebp-4], 0FFFFFFFEh
		jmp	short loc_412D52
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412CF3:				; DATA XREF: .rdata:0041B074o
		mov	edx, [ebp-14h]
		mov	eax, [edx]
		mov	ecx, [eax]
		mov	[ebp-30h], ecx
		mov	edx, [ebp-14h]
		push	edx
		mov	eax, [ebp-30h]
		push	eax
		call	j__seh_filter_exe
		add	esp, 8
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412D0E:				; DATA XREF: .rdata:0041B078o
		mov	esp, [ebp-18h]
		mov	ecx, [ebp-30h]
		mov	[ebp-34h], ecx
		call	sub_411235
		movzx	edx, al
		test	edx, edx
		jnz	short loc_412D2C
		mov	eax, [ebp-34h]
		push	eax
		call	j__exit
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412D2C:				; CODE XREF: sub_412B50+1D1j
		movzx	ecx, byte ptr [ebp-19h]
		test	ecx, ecx
		jnz	short loc_412D39
		call	j__c_exit

loc_412D39:				; CODE XREF: sub_412B50+1E2j
		mov	edx, [ebp-34h]
		mov	[ebp-44h], edx
		mov	dword ptr [ebp-4], 0FFFFFFFEh
		mov	eax, [ebp-44h]
		jmp	short loc_412D52
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		mov	dword ptr [ebp-4], 0FFFFFFFEh

loc_412D52:				; CODE XREF: sub_412B50+AAj
					; sub_412B50+198j ...
		mov	ecx, [ebp+var_10]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_412B50	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 23h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412DF0	proc near		; CODE XREF: sub_4113B6j
		push	ebp
		mov	ebp, esp
		call	sub_41135C
		push	eax
		call	j__configure_narrow_argv
		add	esp, 4
		pop	ebp
		retn
sub_412DF0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412E10	proc near		; CODE XREF: sub_411299j
		push	ebp
		mov	ebp, esp
		call	j__initialize_narrow_environment
		pop	ebp
		retn
sub_412E10	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412E20	proc near		; CODE XREF: sub_412B50:loc_412CA2p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 0Ch
		call	j__get_initial_narrow_environment
		mov	[ebp+var_4], eax
		call	j___p___argv
		mov	eax, [eax]
		mov	[ebp+var_8], eax
		call	j___p___argc
		mov	ecx, [eax]
		mov	[ebp+var_C], ecx
		mov	edx, [ebp+var_4]
		push	edx
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+var_C]
		push	ecx
		call	sub_411311
		add	esp, 0Ch
		mov	esp, ebp
		pop	ebp
		retn
sub_412E20	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412E70	proc near		; CODE XREF: sub_4113D9j
		push	ebp
		mov	ebp, esp
		push	1
		call	j__set_app_type
		add	esp, 4
		pop	ebp
		retn
sub_412E70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412E90	proc near		; CODE XREF: sub_411172j

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		call	sub_411055
		mov	[ebp+var_4], eax
		call	j___p__commode
		mov	ecx, [ebp+var_4]
		mov	[eax], ecx
		mov	esp, ebp
		pop	ebp
		retn
sub_412E90	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412EB0	proc near		; CODE XREF: sub_4112E9j
		push	ebp
		mov	ebp, esp
		call	sub_41103C
		push	eax
		call	j__set_fmode
		add	esp, 4
		pop	ebp
		retn
sub_412EB0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412ED0	proc near		; CODE XREF: startj
		push	ebp
		mov	ebp, esp
		call	sub_412B30
		pop	ebp
		retn
sub_412ED0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412EE0	proc near		; CODE XREF: sub_4132B0+9Ap

Arguments	= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_1		= byte ptr -1
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_18], eax
		lea	eax, [ebp-1]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+Arguments]
		push	eax		; lpArguments
		mov	[ebp+var_1], 0
		mov	[ebp+Arguments], 1001h
		call	sub_413530
		add	esp, 4
		cmp	[ebp+var_1], 0
		setnz	al
		mov	esp, ebp
		pop	ebp
		retn
sub_412EE0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 7 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412F30	proc near		; CODE XREF: sub_4132B0+B6p

Arguments	= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_1		= byte ptr -1
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		lea	eax, [ebp-1]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_8], eax
		lea	eax, [ebp+Arguments]
		push	eax		; lpArguments
		mov	[ebp+var_1], 0
		mov	[ebp+Arguments], 1002h
		call	sub_413530
		add	esp, 4
		cmp	[ebp+var_1], 0
		setnz	al
		mov	esp, ebp
		pop	ebp
		retn
sub_412F30	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 6 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_412F90	proc near		; CODE XREF: sub_4110AAj

var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_4C		= dword	ptr -4Ch
var_18		= dword	ptr -18h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 144h
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		push	ebx
		mov	ebx, [ebp+arg_4]
		push	edi
		mov	edi, dword_41C01C
		mov	[ebp+var_144], eax
		cmp	edi, 0FFFFFFFFh
		jz	loc_413066
		test	ebx, ebx
		jnz	short loc_412FE5
		push	offset aStackAreaAroun ; "Stack	area around _alloca memory reserv"...
		push	4
		push	edi
		push	eax
		call	sub_4132B0
		add	esp, 10h
		pop	edi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_412FE5:				; CODE XREF: sub_412F90+32j
		mov	eax, [ebx+0Ch]
		push	esi
		sub	eax, 24h
		lea	esi, [ebx+20h]
		push	eax
		push	esi
		lea	eax, [ebp+var_4C]
		push	eax
		lea	eax, [ebp+var_18]
		push	eax
		call	sub_413200
		push	offset asc_41A108 ; "\n"
		lea	eax, [ebp+var_4C]
		push	eax
		push	offset asc_41A10C ; "> "
		lea	eax, [ebp+var_18]
		push	eax
		mov	eax, [ebx+0Ch]
		push	offset aData	; "\nData: <"
		push	[ebp+arg_8]
		sub	eax, 24h
		push	offset aAllocationNumb ; "\nAllocation number within this function"...
		push	eax
		push	offset aSize	; "\nSize: "
		push	esi
		push	offset aAddress0x ; "\nAddress:	0x"
		push	offset aStackAreaAro_0 ; "Stack	area around _alloca memory reserv"...
		push	offset aSSPSZdSDSSSSS ;	"%s%s%p%s%zd%s%d%s%s%s%s%s"
		lea	eax, [ebp+var_140]
		push	0F4h
		push	eax
		call	sub_4112F8
		add	esp, 4Ch
		lea	eax, [ebp+var_140]
		push	eax
		push	4
		push	edi
		push	[ebp+var_144]
		call	sub_4132B0
		add	esp, 10h
		pop	esi

loc_413066:				; CODE XREF: sub_412F90+2Aj
		mov	ecx, [ebp+var_4]
		pop	edi
		xor	ecx, ebp
		pop	ebx
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_412F90	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Eh dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4130B0:				; CODE XREF: .text:004112D5j
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+0Ch]
		cmp	eax, 4
		ja	short loc_4130DE
		mov	ecx, dword_41C00C[eax*4]
		mov	edx, ds:off_419B68[eax*4]
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_4130FC
		push	edx
		push	eax
		push	ecx
		push	dword ptr [ebp+8]
		call	sub_4132B0
		add	esp, 10h
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4130DE:				; CODE XREF: .text:004130B9j
		mov	edx, ds:off_419B7C
		mov	eax, 5
		push	edx
		push	eax
		mov	ecx, 1
		push	ecx
		push	dword ptr [ebp+8]
		call	sub_4132B0
		add	esp, 10h

loc_4130FC:				; CODE XREF: .text:004130CCj
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 8 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413120	proc near		; CODE XREF: sub_4111EFj

var_404		= dword	ptr -404h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 404h
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		push	ebx
		mov	ebx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_4]
		push	edi
		mov	edi, dword_41C014
		cmp	edi, 0FFFFFFFFh
		jz	short loc_4131BA
		cmp	byte ptr [esi],	0
		jz	short loc_4131A8
		push	esi
		call	sub_413290
		add	eax, 2Dh
		add	esp, 4
		cmp	eax, 400h
		ja	short loc_4131A8
		push	offset aStackAroundThe ; "Stack	around the variable '"
		lea	eax, [ebp+var_404]
		push	400h
		push	eax
		call	j_strcpy_s
		push	esi
		lea	eax, [ebp+var_404]
		push	400h
		push	eax
		call	j_strcat_s
		push	offset aWasCorrupted_ ;	"' was corrupted."
		lea	eax, [ebp+var_404]
		push	400h
		push	eax
		call	j_strcat_s
		add	esp, 24h
		lea	eax, [ebp+var_404]
		jmp	short loc_4131AD
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4131A8:				; CODE XREF: sub_413120+2Aj
					; sub_413120+3Dj
		mov	eax, offset aStackCorrupted ; "Stack corrupted near unknown variable"

loc_4131AD:				; CODE XREF: sub_413120+86j
		push	eax
		push	2
		push	edi
		push	ebx
		call	sub_4132B0
		add	esp, 10h

loc_4131BA:				; CODE XREF: sub_413120+25j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		xor	ecx, ebp
		pop	ebx
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_413120	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Dh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413200	proc near		; CODE XREF: sub_412F90+69p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		mov	ebx, [ebp+arg_8]
		xor	edx, edx
		push	esi
		mov	esi, [ebp+arg_0]
		push	edi
		xor	edi, edi
		sub	ebx, esi
		mov	[ebp+arg_8], ebx

loc_413216:				; CODE XREF: sub_413200+59j
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_4], edx
		cmp	eax, 10h
		jb	short loc_413226
		mov	eax, 10h

loc_413226:				; CODE XREF: sub_413200+1Fj
		mov	ecx, [ebp+arg_4]
		add	ecx, edi
		cmp	edx, eax
		jnb	short loc_41325B
		mov	bl, [ebx+esi]
		movzx	eax, bl
		push	eax
		mov	eax, 31h
		push	offset a_2x	; "%.2X	"
		sub	eax, edi
		push	eax
		push	ecx
		call	sub_4112F8
		mov	edx, [ebp+var_4]
		add	esp, 10h
		mov	[esi], bl
		inc	edx
		mov	ebx, [ebp+arg_8]
		inc	esi
		add	edi, 3
		jmp	short loc_413216
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41325B:				; CODE XREF: sub_413200+2Dj
		pop	edi
		mov	byte ptr [esi],	0
		pop	esi
		mov	byte ptr [ecx],	0
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_413200	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 0Ah dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413290	proc near		; CODE XREF: sub_413120+2Dp
					; .text:004135F8p

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	edx, [ebp+arg_0]
		mov	eax, edx

loc_413298:				; CODE XREF: sub_413290+Dj
		mov	cl, [eax]
		inc	eax
		test	cl, cl
		jnz	short loc_413298
		sub	eax, edx
		dec	eax
		pop	ebp
		retn
sub_413290	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4132B0	proc near		; CODE XREF: sub_412F90+3Dp
					; sub_412F90+CDp ...

var_E3C		= dword	ptr -0E3Ch
var_E38		= dword	ptr -0E38h
var_E34		= dword	ptr -0E34h
var_E30		= dword	ptr -0E30h
WideCharStr	= word ptr -0E2Ch
var_A2C		= dword	ptr -0A2Ch
MultiByteStr	= byte ptr -720h
var_414		= dword	ptr -414h
var_20C		= dword	ptr -20Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E3Ch
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_C]
		push	esi
		mov	esi, [ebp+arg_0]
		push	edi
		push	esi
		mov	[ebp+var_E30], eax
		mov	[ebp+var_E3C], ebx
		mov	[ebp+var_E34], 0
		call	sub_4111B3
		mov	edi, eax
		add	esp, 4
		test	edi, edi
		jnz	short loc_413303
		push	esi
		call	sub_411046
		add	esp, 4
		mov	[ebp+var_E34], eax

loc_413303:				; CODE XREF: sub_4132B0+42j
		push	0		; cchWideChar
		push	0		; lpWideCharStr
		push	0FFFFFFFFh	; cchMultiByte
		push	ebx		; lpMultiByteStr
		push	0		; dwFlags
		push	0FDE9h		; CodePage
		call	ds:MultiByteToWideChar
		cmp	eax, 200h
		jnb	short loc_413340
		push	eax		; cchWideChar
		lea	eax, [ebp+WideCharStr]
		push	eax		; lpWideCharStr
		push	0FFFFFFFFh	; cchMultiByte
		push	ebx		; lpMultiByteStr
		push	0		; dwFlags
		push	0FDE9h		; CodePage
		call	ds:MultiByteToWideChar
		lea	ebx, [ebp+WideCharStr]
		test	eax, eax
		jnz	short loc_413345

loc_413340:				; CODE XREF: sub_4132B0+6Cj
		mov	ebx, offset aRuntimeCheckEr ; "Runtime Check Error.\r\n	Unable to displa"...

loc_413345:				; CODE XREF: sub_4132B0+8Ej
		push	1002h
		call	sub_412EE0
		add	esp, 4
		test	al, al
		jz	short loc_413378
		mov	eax, [ebp+var_E30]
		push	ebx
		push	esi
		push	ds:dword_419B80[eax*4]
		push	eax
		call	sub_412F30
		add	esp, 10h
		test	al, al
		jnz	loc_41349D
		jmp	short loc_41337A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413378:				; CODE XREF: sub_4132B0+A4j
		mov	al, 1

loc_41337A:				; CODE XREF: sub_4132B0+C6j
		cmp	[ebp+var_E34], 0
		jnz	short loc_41338B
		test	edi, edi
		jz	loc_41349C

loc_41338B:				; CODE XREF: sub_4132B0+D1j
		test	al, al
		jz	short loc_41339D
		call	ds:IsDebuggerPresent
		test	eax, eax
		jnz	loc_41349C

loc_41339D:				; CODE XREF: sub_4132B0+DDj
		push	104h
		lea	eax, [ebp+var_414]
		push	eax
		lea	eax, [ebp+var_E38]
		push	eax
		push	104h
		lea	eax, [ebp+var_20C]
		push	eax
		lea	eax, [esi-5]
		push	eax
		call	sub_4113FC
		add	esp, 18h
		test	edi, edi
		jz	short loc_4133FE
		push	ebx
		push	[ebp+var_E30]
		lea	eax, [ebp+var_414]
		mov	ecx, edi
		push	offset aRunTimeCheckFa ; "Run-Time Check Failure #%d - %s"
		push	eax
		push	[ebp+var_E38]
		lea	eax, [ebp+var_20C]
		push	eax
		push	[ebp+arg_4]
		call	ds:off_41F000
		call	edi
		jmp	loc_413494
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4133FE:				; CODE XREF: sub_4132B0+11Aj
		push	0		; lpUsedDefaultChar
		push	0		; lpDefaultChar
		push	30Ah		; cchMultiByte
		lea	eax, [ebp+MultiByteStr]
		mov	esi, offset aUnknownFilenam ; "Unknown Filename"
		push	eax		; lpMultiByteStr
		push	0FFFFFFFFh	; cchWideChar
		lea	eax, [ebp+var_20C]
		push	eax		; lpWideCharStr
		push	0		; dwFlags
		push	0FDE9h		; CodePage
		call	ds:WideCharToMultiByte
		test	eax, eax
		jz	short loc_413433
		lea	esi, [ebp+MultiByteStr]

loc_413433:				; CODE XREF: sub_4132B0+17Bj
		push	0		; lpUsedDefaultChar
		push	0		; lpDefaultChar
		push	30Ah		; cchMultiByte
		lea	eax, [ebp+var_A2C]
		mov	edi, offset aUnknownModuleN ; "Unknown Module Name"
		push	eax		; lpMultiByteStr
		push	0FFFFFFFFh	; cchWideChar
		lea	eax, [ebp+var_414]
		push	eax		; lpWideCharStr
		push	0		; dwFlags
		push	0FDE9h		; CodePage
		call	ds:WideCharToMultiByte
		test	eax, eax
		jz	short loc_413468
		lea	edi, [ebp+var_A2C]

loc_413468:				; CODE XREF: sub_4132B0+1B0j
		push	[ebp+var_E3C]
		mov	ebx, [ebp+var_E34]
		mov	ecx, ebx
		push	[ebp+var_E30]
		push	offset aRunTimeCheck_0 ; "Run-Time Check Failure #%d - %s"
		push	edi
		push	[ebp+var_E38]
		push	esi
		push	[ebp+arg_4]
		call	ds:off_41F000
		call	ebx

loc_413494:				; CODE XREF: sub_4132B0+149j
		add	esp, 1Ch
		cmp	eax, 1
		jnz	short loc_41349D

loc_41349C:				; CODE XREF: sub_4132B0+D5j
					; sub_4132B0+E7j
		int	3		; Trap to Debugger

loc_41349D:				; CODE XREF: sub_4132B0+C0j
					; sub_4132B0+1EAj
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		xor	ecx, ebp
		pop	ebx
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_4132B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 20h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

; int __cdecl sub_413530(DWORD *lpArguments)
sub_413530	proc near		; CODE XREF: sub_412EE0+21p
					; sub_412F30+33p

var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
lpArguments	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFEh
		push	offset dword_41B080
		push	offset sub_4155C0
		mov	eax, large fs:0
		push	eax
		sub	esp, 8
		push	ebx
		push	esi
		push	edi
		mov	eax, dword_41C004
		xor	[ebp+var_8], eax
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_10]
		mov	large fs:0, eax
		mov	[ebp+var_18], esp
		mov	[ebp+var_4], 0
		push	[ebp+lpArguments] ; lpArguments
		push	6		; nNumberOfArguments
		push	0		; dwExceptionFlags
		push	406D1388h	; dwExceptionCode
		call	ds:RaiseException
		jmp	short loc_413594
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41357E:				; DATA XREF: .rdata:0041B094o
		mov	eax, [ebp-14h]
		mov	eax, [eax]
		xor	ecx, ecx
		cmp	dword ptr [eax], 406D1388h
		setz	cl
		mov	eax, ecx
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413591:				; DATA XREF: .rdata:0041B098o
		mov	esp, [ebp-18h]

loc_413594:				; CODE XREF: sub_413530+4Cj
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	ecx, [ebp+var_10]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_413530	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 8 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4135D0:				; CODE XREF: .text:004110A5j
		push	ebp
		mov	ebp, esp
		sub	esp, 404h
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp-4], eax
		push	esi
		mov	esi, [ebp+8]
		push	edi
		mov	edi, dword_41C018
		cmp	edi, 0FFFFFFFFh
		jz	short loc_413668
		test	esi, esi
		jz	short loc_413653
		push	esi
		call	sub_413290
		add	eax, 3Ah
		add	esp, 4
		cmp	eax, 400h
		ja	short loc_413653
		push	offset aTheVariable ; "The variable '"
		lea	eax, [ebp-404h]
		push	400h
		push	eax
		call	j_strcpy_s
		push	esi
		lea	eax, [ebp-404h]
		push	400h
		push	eax
		call	j_strcat_s
		push	offset aIsBeingUsedWit ; "' is being used without being initializ"...
		lea	eax, [ebp-404h]
		push	400h
		push	eax
		call	j_strcat_s
		add	esp, 24h
		lea	eax, [ebp-404h]
		jmp	short loc_413658
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413653:				; CODE XREF: .text:004135F5j
					; .text:00413608j
		mov	eax, offset aAVariableIsBei ; "A variable is being used	without	being "...

loc_413658:				; CODE XREF: .text:00413651j
		push	eax
		mov	eax, [ebp+4]
		push	3
		push	edi
		push	eax
		call	sub_4132B0
		add	esp, 10h

loc_413668:				; CODE XREF: .text:004135F1j
		mov	ecx, [ebp-4]
		pop	edi
		xor	ecx, ebp
		pop	esi
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 0Eh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_4136B0	proc near		; CODE XREF: sub_4111CCj
		mov	eax, offset dword_41C140
		retn
sub_4136B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4136C0	proc near		; CODE XREF: sub_4111BDj

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		call	sub_4111CC
		push	[ebp+arg_10]
		push	[ebp+arg_C]
		push	[ebp+arg_8]
		push	[ebp+arg_4]
		push	[ebp+arg_0]
		push	dword ptr [eax+4]
		push	dword ptr [eax]
		call	j___stdio_common_vsprintf_s
		add	esp, 1Ch
		test	eax, eax
		jns	short loc_4136EB
		or	eax, 0FFFFFFFFh

loc_4136EB:				; CODE XREF: sub_4136C0+26j
		pop	ebp
		retn
sub_4136C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413700	proc near		; CODE XREF: sub_4112F8j

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+arg_C]
		push	eax
		push	0
		push	[ebp+arg_8]
		push	[ebp+arg_4]
		push	[ebp+arg_0]
		call	sub_4111BD
		add	esp, 14h
		pop	ebp
		retn
sub_413700	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

; int __cdecl sub_413730(struct	_EXCEPTION_POINTERS *ExceptionInfo)
sub_413730	proc near		; CODE XREF: sub_4110D2j

ExceptionInfo	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0		; lpTopLevelExceptionFilter
		call	ds:SetUnhandledExceptionFilter
		mov	eax, [ebp+ExceptionInfo]
		push	eax		; ExceptionInfo
		call	ds:UnhandledExceptionFilter
		push	0C0000409h	; uExitCode
		call	ds:GetCurrentProcess
		push	eax		; hProcess
		call	ds:TerminateProcess
		pop	ebp
		retn
sub_413730	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413770	proc near		; CODE XREF: sub_412980:loc_411005j

var_324		= dword	ptr -324h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 324h
		push	17h		; ProcessorFeature
		call	j_IsProcessorFeaturePresent
		test	eax, eax
		jz	short loc_41378B
		mov	ecx, 2
		int	29h		; DOS 2+ internal - FAST PUTCHAR
					; AL = character to display

loc_41378B:				; CODE XREF: sub_413770+12j
		mov	dword_41C250, eax
		mov	dword_41C24C, ecx
		mov	dword_41C248, edx
		mov	dword_41C244, ebx
		mov	dword_41C240, esi
		mov	dword_41C23C, edi
		mov	word_41C268, ss
		mov	word_41C25C, cs
		mov	word_41C238, ds
		mov	word_41C234, es
		mov	word_41C230, fs
		mov	word_41C22C, gs
		pushf
		pop	dword_41C260
		mov	eax, [ebp+0]
		mov	dword_41C254, eax
		mov	eax, [ebp+4]
		mov	dword_41C258, eax
		lea	eax, [ebp+arg_0]
		mov	dword_41C264, eax
		mov	eax, [ebp+var_324]
		mov	dword_41C1A0, 10001h
		mov	eax, dword_41C258
		mov	dword_41C15C, eax
		mov	dword_41C150, 0C0000409h
		mov	dword_41C154, 1
		mov	dword_41C160, 1
		mov	ecx, 4
		imul	edx, ecx, 0
		mov	dword_41C164[edx], 2
		mov	eax, 4
		imul	ecx, eax, 0
		mov	edx, dword_41C004
		mov	[ebp+ecx+var_8], edx
		mov	eax, 4
		shl	eax, 0
		mov	ecx, dword_41C000
		mov	[ebp+eax+var_8], ecx
		push	offset off_41A228
		call	sub_4110D2
		mov	esp, ebp
		pop	ebp
		retn
sub_413770	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 13h dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4138C0:				; CODE XREF: .text:004111A4j
		push	ebp
		mov	ebp, esp
		push	8
		call	sub_4110F0
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4138D0	proc near		; CODE XREF: sub_4110F0j

var_31C		= dword	ptr -31Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 31Ch
		push	17h		; ProcessorFeature
		call	j_IsProcessorFeaturePresent
		test	eax, eax
		jz	short loc_4138E9
		mov	ecx, [ebp+arg_0]
		int	29h		; DOS 2+ internal - FAST PUTCHAR
					; AL = character to display

loc_4138E9:				; CODE XREF: sub_4138D0+12j
		mov	dword_41C250, eax
		mov	dword_41C24C, ecx
		mov	dword_41C248, edx
		mov	dword_41C244, ebx
		mov	dword_41C240, esi
		mov	dword_41C23C, edi
		mov	word_41C268, ss
		mov	word_41C25C, cs
		mov	word_41C238, ds
		mov	word_41C234, es
		mov	word_41C230, fs
		mov	word_41C22C, gs
		pushf
		pop	dword_41C260
		mov	eax, [ebp+0]
		mov	dword_41C254, eax
		mov	eax, [ebp+4]
		mov	dword_41C258, eax
		lea	eax, [ebp+arg_0]
		mov	dword_41C264, eax
		mov	eax, [ebp+var_31C]
		mov	eax, dword_41C258
		mov	dword_41C15C, eax
		mov	dword_41C150, 0C0000409h
		mov	dword_41C154, 1
		mov	dword_41C160, 1
		mov	ecx, 4
		imul	edx, ecx, 0
		mov	eax, [ebp+arg_0]
		mov	dword_41C164[edx], eax
		push	offset off_41A228
		call	sub_4110D2
		mov	esp, ebp
		pop	ebp
		retn
sub_4138D0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Fh dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4139E0:				; CODE XREF: .text:00411073j
		push	ebp
		mov	ebp, esp
		sub	esp, 320h
		push	17h
		call	j_IsProcessorFeaturePresent
		test	eax, eax
		jz	short loc_4139F9
		mov	ecx, [ebp+8]
		int	29h		; DOS 2+ internal - FAST PUTCHAR
					; AL = character to display

loc_4139F9:				; CODE XREF: .text:004139F2j
		mov	dword_41C250, eax
		mov	dword_41C24C, ecx
		mov	dword_41C248, edx
		mov	dword_41C244, ebx
		mov	dword_41C240, esi
		mov	dword_41C23C, edi
		mov	word_41C268, ss
		mov	word_41C25C, cs
		mov	word_41C238, ds
		mov	word_41C234, es
		mov	word_41C230, fs
		mov	word_41C22C, gs
		pushf
		pop	dword_41C260
		mov	eax, [ebp+0]
		mov	dword_41C254, eax
		mov	eax, [ebp+4]
		mov	dword_41C258, eax
		lea	eax, [ebp+8]
		mov	dword_41C264, eax
		mov	eax, [ebp-320h]
		mov	eax, dword_41C258
		mov	dword_41C15C, eax
		mov	dword_41C150, 0C0000409h
		mov	dword_41C154, 1
		cmp	dword ptr [ebp+0Ch], 0
		jbe	short loc_413A9C
		cmp	dword ptr [ebp+10h], 0
		jnz	short loc_413A9C
		mov	dword ptr [ebp+0Ch], 0

loc_413A9C:				; CODE XREF: .text:00413A8Dj
					; .text:00413A93j
		cmp	dword ptr [ebp+0Ch], 0Eh
		jbe	short loc_413AAB
		mov	ecx, [ebp+0Ch]
		sub	ecx, 1
		mov	[ebp+0Ch], ecx

loc_413AAB:				; CODE XREF: .text:00413AA0j
		mov	edx, [ebp+0Ch]
		add	edx, 1
		mov	dword_41C160, edx
		mov	eax, 4
		imul	ecx, eax, 0
		mov	edx, [ebp+8]
		mov	dword_41C164[ecx], edx
		mov	dword ptr [ebp-4], 0
		jmp	short loc_413ADA
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413AD1:				; CODE XREF: .text:00413AF5j
		mov	eax, [ebp-4]
		add	eax, 1
		mov	[ebp-4], eax

loc_413ADA:				; CODE XREF: .text:00413ACFj
		mov	ecx, [ebp-4]
		cmp	ecx, [ebp+0Ch]
		jnb	short loc_413AF7
		mov	edx, [ebp-4]
		mov	eax, [ebp-4]
		mov	ecx, [ebp+10h]
		mov	eax, [ecx+eax*4]
		mov	dword_41C168[edx*4], eax
		jmp	short loc_413AD1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413AF7:				; CODE XREF: .text:00413AE0j
		push	offset off_41A228
		call	sub_4110D2
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 12h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_413B50	proc near		; CODE XREF: sub_411046j
		mov	eax, dword_41C50C
		retn
sub_413B50	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_413B60	proc near		; CODE XREF: sub_4111B3j
		mov	eax, dword_41C510
		retn
sub_413B60	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_413B70:				; CODE XREF: .text:004113ACj
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+8]
		cmp	eax, 4
		ja	short loc_413B84
		mov	eax, ds:off_41A234[eax*4]
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413B84:				; CODE XREF: .text:00413B79j
		xor	eax, eax
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_413B90:				; CODE XREF: .text:00411334j
		mov	eax, 5
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_413BA0:				; CODE XREF: .text:00411230j
		push	ebp
		mov	ebp, esp
		mov	eax, dword_41C50C
		mov	ecx, [ebp+8]
		mov	dword_41C50C, ecx
		mov	dword_41C510, 0
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413BD0	proc near		; CODE XREF: sub_411262j

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, dword_41C510
		mov	ecx, [ebp+arg_0]
		mov	dword_41C510, ecx
		mov	dword_41C50C, 0
		pop	ebp
		retn
sub_413BD0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413C00:				; CODE XREF: .text:00411401j
		push	ebp
		mov	ebp, esp
		mov	edx, [ebp+8]
		cmp	edx, 4
		ja	short loc_413C1E
		mov	eax, dword_41C00C[edx*4]
		mov	ecx, [ebp+0Ch]
		mov	dword_41C00C[edx*4], ecx
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413C1E:				; CODE XREF: .text:00413C09j
		or	eax, 0FFFFFFFFh
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413C30	proc near		; CODE XREF: sub_4140E0+7Ep

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	ecx, [ebp+var_C]
		mov	edx, [ebp+var_C]
		add	edx, [ecx+3Ch]
		mov	[ebp+var_14], edx
		mov	eax, [ebp+var_14]
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_8]
		movzx	edx, word ptr [ecx+14h]
		mov	eax, [ebp+var_8]
		lea	ecx, [eax+edx+18h]
		mov	[ebp+var_10], ecx
		mov	edx, [ebp+var_8]
		movzx	eax, word ptr [edx+6]
		imul	ecx, eax, 28h
		add	ecx, [ebp+var_10]
		mov	[ebp+var_18], ecx
		mov	edx, [ebp+var_10]
		mov	[ebp+var_4], edx
		jmp	short loc_413C80
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413C77:				; CODE XREF: sub_413C30:loc_413CA9j
		mov	eax, [ebp+var_4]
		add	eax, 28h
		mov	[ebp+var_4], eax

loc_413C80:				; CODE XREF: sub_413C30+45j
		mov	ecx, [ebp+var_4]
		cmp	ecx, [ebp+var_18]
		jz	short loc_413CAB
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_4]
		cmp	eax, [edx+0Ch]
		jb	short loc_413CA9
		mov	ecx, [ebp+var_4]
		mov	edx, [ecx+0Ch]
		mov	eax, [ebp+var_4]
		add	edx, [eax+8]
		cmp	[ebp+arg_4], edx
		jnb	short loc_413CA9
		mov	eax, [ebp+var_4]
		jmp	short loc_413CAD
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413CA9:				; CODE XREF: sub_413C30+61j
					; sub_413C30+72j
		jmp	short loc_413C77
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413CAB:				; CODE XREF: sub_413C30+56j
		xor	eax, eax

loc_413CAD:				; CODE XREF: sub_413C30+77j
		mov	esp, ebp
		pop	ebp
		retn
sub_413C30	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Bh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413CE0	proc near		; CODE XREF: sub_4140E0+4Bp

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_0], 0
		jnz	short loc_413CF0
		xor	al, al
		jmp	short loc_413D45
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413CF0:				; CODE XREF: sub_413CE0+Aj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	ecx, [ebp+var_4]
		movzx	edx, word ptr [ecx]
		cmp	edx, 5A4Dh
		jz	short loc_413D08
		xor	al, al
		jmp	short loc_413D45
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413D08:				; CODE XREF: sub_413CE0+22j
		mov	eax, [ebp+var_4]
		mov	ecx, [ebp+var_4]
		add	ecx, [eax+3Ch]
		mov	[ebp+var_C], ecx
		mov	edx, [ebp+var_C]
		mov	[ebp+var_8], edx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax], 4550h
		jz	short loc_413D29
		xor	al, al
		jmp	short loc_413D45
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413D29:				; CODE XREF: sub_413CE0+43j
		mov	ecx, [ebp+var_8]
		add	ecx, 18h
		mov	[ebp+var_10], ecx
		mov	edx, [ebp+var_10]
		movzx	eax, word ptr [edx]
		cmp	eax, 10Bh
		jz	short loc_413D43
		xor	al, al
		jmp	short loc_413D45
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413D43:				; CODE XREF: sub_413CE0+5Dj
		mov	al, 1

loc_413D45:				; CODE XREF: sub_413CE0+Ej
					; sub_413CE0+26j ...
		mov	esp, ebp
		pop	ebp
		retn
sub_413CE0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 9 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413D70	proc near		; CODE XREF: sub_4113F2j
		push	ebp
		mov	ebp, esp
		mov	eax, large fs:18h
		pop	ebp
		retn
sub_413D70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413D80	proc near		; CODE XREF: sub_4113F7j

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		call	sub_4110F5
		test	eax, eax
		jnz	short loc_413D93
		xor	al, al
		jmp	short loc_413DC5
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413D93:				; CODE XREF: sub_413D80+Dj
		call	sub_4113F2
		mov	eax, [eax+4]
		mov	[ebp+var_4], eax

loc_413D9E:				; CODE XREF: sub_413D80:loc_413DC1j
		mov	ecx, [ebp+var_4]
		mov	edx, offset dword_41C51C
		xor	eax, eax
		lock cmpxchg [edx], ecx
		mov	[ebp+var_8], eax
		cmp	[ebp+var_8], 0
		jz	short loc_413DC3
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_8]
		jnz	short loc_413DC1
		mov	al, 1
		jmp	short loc_413DC5
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413DC1:				; CODE XREF: sub_413D80+3Bj
		jmp	short loc_413D9E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413DC3:				; CODE XREF: sub_413D80+33j
		xor	al, al

loc_413DC5:				; CODE XREF: sub_413D80+11j
					; sub_413D80+3Fj
		mov	esp, ebp
		pop	ebp
		retn
sub_413D80	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413DE0:				; CODE XREF: .text:00411212j
		push	ebp
		mov	ebp, esp
		call	sub_4110F5
		test	eax, eax
		jz	short loc_413DF3
		call	sub_41100A
		jmp	short loc_413E05
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413DF3:				; CODE XREF: .text:00413DEAj
		call	sub_4113B6
		test	eax, eax
		jz	short loc_413E00
		xor	al, al
		jmp	short loc_413E07
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E00:				; CODE XREF: .text:00413DFAj
		call	sub_411299

loc_413E05:				; CODE XREF: .text:00413DF1j
		mov	al, 1

loc_413E07:				; CODE XREF: .text:00413DFEj
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E20:				; CODE XREF: .text:00411131j
		push	ebp
		mov	ebp, esp
		push	0
		call	sub_411037
		add	esp, 4
		movzx	eax, al
		test	eax, eax
		jnz	short loc_413E38
		xor	al, al
		jmp	short loc_413E3A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E38:				; CODE XREF: .text:00413E32j
		mov	al, 1

loc_413E3A:				; CODE XREF: .text:00413E36j
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E50:				; CODE XREF: .text:004110FFj
		push	ebp
		mov	ebp, esp
		call	sub_4110D7
		movzx	eax, al
		test	eax, eax
		jnz	short loc_413E63
		xor	al, al
		jmp	short loc_413E7A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E63:				; CODE XREF: .text:00413E5Dj
		call	sub_411276
		movzx	ecx, al
		test	ecx, ecx
		jnz	short loc_413E78
		call	sub_4112FD
		xor	al, al
		jmp	short loc_413E7A
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E78:				; CODE XREF: .text:00413E6Dj
		mov	al, 1

loc_413E7A:				; CODE XREF: .text:00413E61j
					; .text:00413E76j
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413E90:				; CODE XREF: .text:004113A2j
		push	ebp
		mov	ebp, esp
		call	sub_4110C3
		call	sub_4112FD
		mov	al, 1
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_413EB0:				; CODE XREF: .text:0041128Aj
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		call	sub_4110F5
		test	eax, eax
		jnz	short loc_413EE7
		cmp	dword ptr [ebp+0Ch], 1
		jnz	short loc_413EE7
		mov	eax, [ebp+14h]
		mov	[ebp-8], eax
		mov	ecx, [ebp+10h]
		push	ecx
		push	0
		mov	edx, [ebp+8]
		push	edx
		mov	eax, [ebp-8]
		mov	[ebp-4], eax
		mov	ecx, [ebp-4]
		call	ds:off_41F000
		call	dword ptr [ebp-4]

loc_413EE7:				; CODE XREF: .text:00413EBDj
					; .text:00413EC3j
		mov	ecx, [ebp+1Ch]
		push	ecx
		mov	edx, [ebp+18h]
		push	edx
		call	j__seh_filter_dll
		add	esp, 8
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413F10:				; CODE XREF: .text:0041131Bj
		push	ebp
		mov	ebp, esp
		call	sub_4110F5
		test	eax, eax
		jz	short loc_413F2B
		push	offset dword_41C524
		call	j__execute_onexit_table
		add	esp, 4
		jmp	short loc_413F39
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413F2B:				; CODE XREF: .text:00413F1Aj
		call	sub_4110CD
		test	eax, eax
		jnz	short loc_413F39
		call	j__cexit

loc_413F39:				; CODE XREF: .text:00413F29j
					; .text:00413F32j
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413F50:				; CODE XREF: .text:004111DBj
		push	ebp
		mov	ebp, esp
		push	0
		call	sub_411393
		add	esp, 4
		call	sub_411320
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413F70	proc near		; CODE XREF: sub_411154j

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_0], 0
		jnz	short loc_413F80
		mov	byte_41C520, 1

loc_413F80:				; CODE XREF: sub_413F70+7j
		call	sub_41100A
		call	sub_411177
		movzx	eax, al
		test	eax, eax
		jnz	short loc_413F95
		xor	al, al
		jmp	short loc_413FB1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413F95:				; CODE XREF: sub_413F70+1Fj
		call	sub_41133E
		movzx	ecx, al
		test	ecx, ecx
		jnz	short loc_413FAF
		push	0
		call	sub_41110E
		add	esp, 4
		xor	al, al
		jmp	short loc_413FB1
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413FAF:				; CODE XREF: sub_413F70+2Fj
		mov	al, 1

loc_413FB1:				; CODE XREF: sub_413F70+23j
					; sub_413F70+3Dj
		pop	ebp
		retn
sub_413F70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 7 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_413FD0	proc near		; CODE XREF: sub_411037j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 1Ch
		movzx	eax, byte_41C521
		test	eax, eax
		jz	short loc_413FE8
		mov	al, 1
		jmp	loc_41409E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_413FE8:				; CODE XREF: sub_413FD0+Fj
		cmp	[ebp+arg_0], 0
		jz	short loc_413FFB
		cmp	[ebp+arg_0], 1
		jz	short loc_413FFB
		push	5
		call	sub_411348

loc_413FFB:				; CODE XREF: sub_413FD0+1Cj
					; sub_413FD0+22j
		call	sub_4110F5
		test	eax, eax
		jz	short loc_414036
		cmp	[ebp+arg_0], 0
		jnz	short loc_414036
		push	offset dword_41C524
		call	j__initialize_onexit_table
		add	esp, 4
		test	eax, eax
		jz	short loc_41401F
		xor	al, al
		jmp	short loc_41409E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41401F:				; CODE XREF: sub_413FD0+49j
		push	offset dword_41C530
		call	j__initialize_onexit_table
		add	esp, 4
		test	eax, eax
		jz	short loc_414034
		xor	al, al
		jmp	short loc_41409E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414034:				; CODE XREF: sub_413FD0+5Ej
		jmp	short loc_414095
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414036:				; CODE XREF: sub_413FD0+32j
					; sub_413FD0+38j
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_4]
		mov	[ebp+var_10], ecx
		mov	edx, [ebp+var_4]
		mov	[ebp+var_C], edx
		mov	eax, [ebp+var_4]
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_10]
		mov	dword_41C524, ecx
		mov	edx, [ebp+var_C]
		mov	dword_41C528, edx
		mov	eax, [ebp+var_8]
		mov	dword_41C52C, eax
		mov	ecx, [ebp+var_4]
		mov	[ebp+var_1C], ecx
		mov	edx, [ebp+var_4]
		mov	[ebp+var_18], edx
		mov	eax, [ebp+var_4]
		mov	[ebp+var_14], eax
		mov	ecx, [ebp+var_1C]
		mov	dword_41C530, ecx
		mov	edx, [ebp+var_18]
		mov	dword_41C534, edx
		mov	eax, [ebp+var_14]
		mov	dword_41C538, eax

loc_414095:				; CODE XREF: sub_413FD0:loc_414034j
		mov	byte_41C521, 1
		mov	al, 1

loc_41409E:				; CODE XREF: sub_413FD0+13j
					; sub_413FD0+4Dj ...
		mov	esp, ebp
		pop	ebp
		retn
sub_413FD0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Fh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4140E0	proc near		; CODE XREF: sub_41121Cj

var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_1C		= byte ptr -1Ch
var_1B		= byte ptr -1Bh
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFEh
		push	offset dword_41B0A0
		push	offset sub_414AF0
		mov	eax, large fs:0
		push	eax
		add	esp, 0FFFFFFD8h
		push	ebx
		push	esi
		push	edi
		mov	eax, dword_41C004
		xor	[ebp+var_8], eax
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_10]
		mov	large fs:0, eax
		mov	[ebp+var_18], esp
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_30], eax
		mov	[ebp+var_24], 400000h
		mov	[ebp+var_4], 0
		mov	ecx, [ebp+var_24]
		push	ecx
		call	sub_413CE0
		add	esp, 4
		movzx	edx, al
		test	edx, edx
		jnz	short loc_41414D
		mov	[ebp+var_19], 0
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	al, [ebp+var_19]
		jmp	loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41414D:				; CODE XREF: sub_4140E0+58j
		mov	eax, [ebp+var_30]
		sub	eax, [ebp+var_24]
		mov	[ebp+var_34], eax
		mov	ecx, [ebp+var_34]
		push	ecx
		mov	edx, [ebp+var_24]
		push	edx
		call	sub_413C30
		add	esp, 8
		mov	[ebp+var_28], eax
		cmp	[ebp+var_28], 0
		jnz	short loc_41417F
		mov	[ebp+var_1A], 0
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	al, [ebp+var_1A]
		jmp	short loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41417F:				; CODE XREF: sub_4140E0+8Dj
		mov	eax, [ebp+var_28]
		mov	ecx, [eax+24h]
		and	ecx, 80000000h
		jz	short loc_41419D
		mov	[ebp+var_1B], 0
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	al, [ebp+var_1B]
		jmp	short loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41419D:				; CODE XREF: sub_4140E0+ABj
		mov	[ebp+var_1C], 1
		mov	[ebp+var_4], 0FFFFFFFEh
		mov	al, [ebp+var_1C]
		jmp	short loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		mov	dword ptr [ebp-4], 0FFFFFFFEh
		jmp	short loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4141B6:				; DATA XREF: .rdata:0041B0B4o
		mov	edx, [ebp-14h]
		mov	eax, [edx]
		mov	ecx, [eax]
		mov	[ebp-38h], ecx
		cmp	dword ptr [ebp-38h], 0C0000005h
		jnz	short loc_4141D2
		mov	dword ptr [ebp-2Ch], 1
		jmp	short loc_4141D9
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4141D2:				; CODE XREF: sub_4140E0+E7j
		mov	dword ptr [ebp-2Ch], 0

loc_4141D9:				; CODE XREF: sub_4140E0+F0j
		mov	eax, [ebp-2Ch]
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4141DD:				; DATA XREF: .rdata:0041B0B8o
		mov	esp, [ebp-18h]
		mov	byte ptr [ebp-1Dh], 0
		mov	dword ptr [ebp-4], 0FFFFFFFEh
		mov	al, [ebp-1Dh]
		jmp	short loc_4141F7
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		mov	dword ptr [ebp-4], 0FFFFFFFEh

loc_4141F7:				; CODE XREF: sub_4140E0+68j
					; sub_4140E0+9Dj ...
		mov	ecx, [ebp+var_10]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_4140E0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 15h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414260	proc near		; CODE XREF: sub_4110B4j

arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		call	sub_4110F5
		test	eax, eax
		jnz	short loc_41426E
		jmp	short loc_414281
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41426E:				; CODE XREF: sub_414260+Aj
		movzx	eax, [ebp+arg_0]
		test	eax, eax
		jz	short loc_414278
		jmp	short loc_414281
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414278:				; CODE XREF: sub_414260+14j
		xor	ecx, ecx
		mov	edx, offset dword_41C51C
		xchg	ecx, [edx]

loc_414281:				; CODE XREF: sub_414260+Cj
					; sub_414260+16j
		pop	ebp
		retn
sub_414260	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414290	proc near		; CODE XREF: sub_4112ADj

arg_0		= byte ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		movzx	eax, byte_41C520
		test	eax, eax
		jz	short loc_4142AA
		movzx	ecx, [ebp+arg_4]
		test	ecx, ecx
		jz	short loc_4142AA
		mov	al, 1
		jmp	short loc_4142C6
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4142AA:				; CODE XREF: sub_414290+Cj
					; sub_414290+14j
		movzx	edx, [ebp+arg_0]
		push	edx
		call	sub_4110A0
		add	esp, 4
		movzx	eax, [ebp+arg_0]
		push	eax
		call	sub_41110E
		add	esp, 4
		mov	al, 1

loc_4142C6:				; CODE XREF: sub_414290+18j
		pop	ebp
		retn
sub_414290	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 6 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4142E0	proc near		; CODE XREF: sub_41128Fj

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0Ch
		mov	eax, dword_41C524
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0FFFFFFFFh
		jnz	short loc_41431A
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	j__crt_atexit
		add	esp, 4
		test	eax, eax
		jnz	short loc_41430C
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_4], edx
		jmp	short loc_414313
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41430C:				; CODE XREF: sub_4142E0+22j
		mov	[ebp+var_4], 0

loc_414313:				; CODE XREF: sub_4142E0+2Aj
		mov	eax, [ebp+var_4]
		jmp	short loc_414341
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	short loc_414341
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41431A:				; CODE XREF: sub_4142E0+12j
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset dword_41C524
		call	j__register_onexit_function
		add	esp, 8
		test	eax, eax
		jnz	short loc_414337
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_8], ecx
		jmp	short loc_41433E
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414337:				; CODE XREF: sub_4142E0+4Dj
		mov	[ebp+var_8], 0

loc_41433E:				; CODE XREF: sub_4142E0+55j
		mov	eax, [ebp+var_8]

loc_414341:				; CODE XREF: sub_4142E0+36j
					; sub_4142E0+38j
		mov	esp, ebp
		pop	ebp
		retn
sub_4142E0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 6 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414360:				; CODE XREF: .text:0041124Ej
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, dword_41C530
		mov	[ebp-4], eax
		cmp	dword ptr [ebp-4], 0FFFFFFFFh
		jnz	short loc_414384
		mov	ecx, [ebp+8]
		push	ecx
		call	j__crt_at_quick_exit
		add	esp, 4
		jmp	short loc_41439B
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		jmp	short loc_41439B
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414384:				; CODE XREF: .text:00414372j
		mov	edx, [ebp+8]
		mov	[ebp-8], edx
		mov	eax, [ebp-8]
		push	eax
		push	offset dword_41C530
		call	j__register_onexit_function
		add	esp, 8

loc_41439B:				; CODE XREF: .text:00414380j
					; .text:00414382j
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4143B0	proc near		; CODE XREF: sub_411280j

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ecx
		mov	eax, [ebp+arg_0]
		push	eax
		call	sub_41128F
		add	esp, 4
		test	eax, eax
		jz	short loc_4143CD
		mov	[ebp+var_4], 0
		jmp	short loc_4143D4
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4143CD:				; CODE XREF: sub_4143B0+12j
		mov	[ebp+var_4], 0FFFFFFFFh

loc_4143D4:				; CODE XREF: sub_4143B0+1Bj
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_4143B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4143F0	proc near		; CODE XREF: sub_414480:loc_4144ACp

PerformanceCount= LARGE_INTEGER	ptr -14h
SystemTimeAsFileTime= _FILETIME	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		xor	eax, eax
		mov	[ebp+SystemTimeAsFileTime.dwLowDateTime], eax
		mov	[ebp+SystemTimeAsFileTime.dwHighDateTime], eax
		lea	ecx, [ebp+SystemTimeAsFileTime]
		push	ecx		; lpSystemTimeAsFileTime
		call	ds:GetSystemTimeAsFileTime
		mov	edx, [ebp+SystemTimeAsFileTime.dwLowDateTime]
		mov	[ebp+var_4], edx
		mov	eax, [ebp+var_4]
		xor	eax, [ebp+SystemTimeAsFileTime.dwHighDateTime]
		mov	[ebp+var_4], eax
		call	ds:GetCurrentThreadId
		xor	eax, [ebp+var_4]
		mov	[ebp+var_4], eax
		call	ds:GetCurrentProcessId
		xor	eax, [ebp+var_4]
		mov	[ebp+var_4], eax
		lea	ecx, [ebp+PerformanceCount]
		push	ecx		; lpPerformanceCount
		call	ds:QueryPerformanceCounter
		mov	edx, [ebp+var_4]
		xor	edx, dword ptr [ebp+PerformanceCount]
		mov	[ebp+var_4], edx
		mov	eax, [ebp+var_4]
		xor	eax, dword ptr [ebp+PerformanceCount+4]
		mov	[ebp+var_4], eax
		mov	ecx, [ebp+var_4]
		lea	edx, [ebp+var_4]
		xor	ecx, edx
		mov	[ebp+var_4], ecx
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_4143F0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 8 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414480	proc near		; CODE XREF: sub_41132Aj

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		cmp	dword_41C004, 0BB40E64Eh
		jz	short loc_4144AC
		mov	eax, dword_41C004
		and	eax, 0FFFF0000h
		jz	short loc_4144AC
		mov	ecx, dword_41C004
		not	ecx
		mov	dword_41C000, ecx
		jmp	short loc_4144F6
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4144AC:				; CODE XREF: sub_414480+Ej
					; sub_414480+1Aj
		call	sub_4143F0
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0BB40E64Eh
		jnz	short loc_4144C6
		mov	[ebp+var_4], 0BB40E64Fh
		jmp	short loc_4144E2
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4144C6:				; CODE XREF: sub_414480+3Bj
		mov	edx, [ebp+var_4]
		and	edx, 0FFFF0000h
		jnz	short loc_4144E2
		mov	eax, [ebp+var_4]
		or	eax, 4711h
		shl	eax, 10h
		or	eax, [ebp+var_4]
		mov	[ebp+var_4], eax

loc_4144E2:				; CODE XREF: sub_414480+44j
					; sub_414480+4Fj
		mov	ecx, [ebp+var_4]
		mov	dword_41C004, ecx
		mov	edx, [ebp+var_4]
		not	edx
		mov	dword_41C000, edx

loc_4144F6:				; CODE XREF: sub_414480+2Aj
		mov	esp, ebp
		pop	ebp
		retn
sub_414480	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 9 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414520	proc near		; CODE XREF: sub_411370j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_414520	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414530	proc near		; CODE XREF: sub_41135Cj
		push	ebp
		mov	ebp, esp
		mov	eax, 1
		pop	ebp
		retn
sub_414530	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414540	proc near		; CODE XREF: sub_411055j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_414540	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414550	proc near		; CODE XREF: sub_41103Cj
		push	ebp
		mov	ebp, esp
		mov	eax, 4000h
		pop	ebp
		retn
sub_414550	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414560	proc near		; CODE XREF: sub_41125Dj
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_414560	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414570	proc near		; CODE XREF: sub_411168j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_414570	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414580	proc near		; CODE XREF: sub_411352j
		push	ebp
		mov	ebp, esp
		push	offset dword_41C548
		call	ds:InitializeSListHead
		pop	ebp
		retn
sub_414580	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4145A0:				; CODE XREF: .text:004110BEj
		push	ebp
		mov	ebp, esp
		push	offset dword_41C548
		call	j___std_type_info_destroy_list
		add	esp, 4
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4145C0	proc near		; CODE XREF: sub_411136j
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_4145C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4145D0	proc near		; CODE XREF: sub_4112C6j
		push	ebp
		mov	ebp, esp
		push	30000h
		push	10000h
		push	0
		call	j__controlfp_s
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_4145F2
		push	7
		call	sub_411348

loc_4145F2:				; CODE XREF: sub_4145D0+19j
		pop	ebp
		retn
sub_4145D0	endp ; sp = -4

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414600	proc near		; CODE XREF: sub_41100Fj
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_414600	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414610	proc near		; CODE XREF: sub_4110EBj
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_414610	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414620	proc near		; CODE XREF: sub_411316j
		push	ebp
		mov	ebp, esp
		mov	eax, offset dword_41C558
		pop	ebp
		retn
sub_414620	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414630	proc near		; CODE XREF: sub_4113EDj

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		call	sub_4111CC
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	ecx, [eax]
		or	ecx, 24h
		mov	edx, [eax+4]
		mov	eax, [ebp+var_4]
		mov	[eax], ecx
		mov	[eax+4], edx
		call	sub_411316
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		or	edx, 2
		mov	eax, [ecx+4]
		mov	ecx, [ebp+var_8]
		mov	[ecx], edx
		mov	[ecx+4], eax
		mov	esp, ebp
		pop	ebp
		retn
sub_414630	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414680	proc near		; CODE XREF: sub_4110AFj

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		cmp	dword_41C028, 0
		jnz	short loc_414696
		mov	[ebp+var_4], 1
		jmp	short loc_41469D
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414696:				; CODE XREF: sub_414680+Bj
		mov	[ebp+var_4], 0

loc_41469D:				; CODE XREF: sub_414680+14j
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_414680	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4146B0	proc near		; CODE XREF: sub_4111E5j
		push	ebp
		mov	ebp, esp
		mov	eax, offset dword_41C588
		pop	ebp
		retn
sub_4146B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4146C0	proc near		; CODE XREF: sub_4112A3j
		push	ebp
		mov	ebp, esp
		mov	eax, offset dword_41C57C
		pop	ebp
		retn
sub_4146C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4146D0	proc near		; CODE XREF: sub_411348j

var_32C		= dword	ptr -32Ch
var_2A0		= word ptr -2A0h
var_29C		= word ptr -29Ch
var_298		= word ptr -298h
var_294		= word ptr -294h
var_290		= dword	ptr -290h
var_28C		= dword	ptr -28Ch
var_288		= dword	ptr -288h
var_284		= dword	ptr -284h
var_280		= dword	ptr -280h
var_27C		= dword	ptr -27Ch
var_278		= dword	ptr -278h
var_274		= dword	ptr -274h
var_270		= word ptr -270h
var_26C		= dword	ptr -26Ch
var_268		= dword	ptr -268h
var_264		= word ptr -264h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_54		= dword	ptr -54h
ExceptionInfo	= _EXCEPTION_POINTERS ptr -10h
var_8		= dword	ptr -8
var_2		= byte ptr -2
var_1		= byte ptr -1
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 32Ch
		push	17h		; ProcessorFeature
		call	j_IsProcessorFeaturePresent
		test	eax, eax
		jz	short loc_4146E9
		mov	ecx, [ebp+arg_0]
		int	29h		; DOS 2+ internal - FAST PUTCHAR
					; AL = character to display

loc_4146E9:				; CODE XREF: sub_4146D0+12j
		push	3
		call	sub_41114A
		add	esp, 4
		push	2CCh		; size_t
		push	0		; int
		lea	eax, [ebp+var_32C]
		push	eax		; void *
		call	j_memset
		add	esp, 0Ch
		mov	[ebp+var_27C], eax
		mov	[ebp+var_280], ecx
		mov	[ebp+var_284], edx
		mov	[ebp+var_288], ebx
		mov	[ebp+var_28C], esi
		mov	[ebp+var_290], edi
		mov	[ebp+var_264], ss
		mov	[ebp+var_270], cs
		mov	[ebp+var_294], ds
		mov	[ebp+var_298], es
		mov	[ebp+var_29C], fs
		mov	[ebp+var_2A0], gs
		pushf
		pop	[ebp+var_26C]
		mov	[ebp+var_32C], 10001h
		mov	ecx, [ebp+4]
		mov	[ebp+var_274], ecx
		lea	edx, [ebp+4]
		mov	[ebp+var_268], edx
		lea	eax, [ebp+4]
		mov	ecx, [eax-4]
		mov	[ebp+var_278], ecx
		push	50h		; size_t
		push	0		; int
		lea	edx, [ebp+var_60]
		push	edx		; void *
		call	j_memset
		add	esp, 0Ch
		mov	[ebp+var_60], 40000015h
		mov	[ebp+var_5C], 1
		mov	eax, [ebp+4]
		mov	[ebp+var_54], eax
		call	ds:IsDebuggerPresent
		cmp	eax, 1
		jnz	short loc_4147BB
		mov	[ebp+var_1], 1
		jmp	short loc_4147BF
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4147BB:				; CODE XREF: sub_4146D0+E3j
		mov	[ebp+var_1], 0

loc_4147BF:				; CODE XREF: sub_4146D0+E9j
		mov	cl, [ebp+var_1]
		mov	[ebp+var_2], cl
		lea	edx, [ebp+var_60]
		mov	[ebp+ExceptionInfo.ExceptionRecord], edx
		lea	eax, [ebp+var_32C]
		mov	[ebp+ExceptionInfo.ContextRecord], eax
		push	0		; lpTopLevelExceptionFilter
		call	ds:SetUnhandledExceptionFilter
		lea	ecx, [ebp+ExceptionInfo]
		push	ecx		; ExceptionInfo
		call	ds:UnhandledExceptionFilter
		mov	[ebp+var_8], eax
		cmp	[ebp+var_8], 0
		jnz	short loc_414801
		movzx	edx, [ebp+var_2]
		test	edx, edx
		jnz	short loc_414801
		push	3
		call	sub_41114A
		add	esp, 4

loc_414801:				; CODE XREF: sub_4146D0+11Dj
					; sub_4146D0+125j
		mov	esp, ebp
		pop	ebp
		retn
sub_4146D0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 16h dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414860:				; CODE XREF: .text:00411271j
		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		push	44h
		push	0
		lea	eax, [ebp-48h]
		push	eax
		call	j_memset
		add	esp, 0Ch
		lea	ecx, [ebp-48h]
		push	ecx
		call	ds:GetStartupInfoW
		mov	edx, [ebp-1Ch]
		and	edx, 1
		jz	short loc_414891
		movzx	eax, word ptr [ebp-18h]
		mov	[ebp-4], eax
		jmp	short loc_414898
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414891:				; CODE XREF: .text:00414886j
		mov	dword ptr [ebp-4], 0Ah

loc_414898:				; CODE XREF: .text:0041488Fj
		mov	ax, [ebp-4]
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4148B0	proc near		; CODE XREF: sub_411307j
		push	ebp
		mov	ebp, esp
		call	sub_4113E3
		pop	ebp
		retn
sub_4148B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4148C0	proc near		; CODE XREF: sub_411050j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_4148C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4148D0	proc near		; CODE XREF: sub_411235j

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		push	0		; lpModuleName
		call	ds:GetModuleHandleW
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jnz	short loc_4148EB
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4148EB:				; CODE XREF: sub_4148D0+15j
		mov	eax, [ebp+var_4]
		movzx	ecx, word ptr [eax]
		cmp	ecx, 5A4Dh
		jz	short loc_4148FD
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4148FD:				; CODE XREF: sub_4148D0+27j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_4]
		add	eax, [edx+3Ch]
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx], 4550h
		jz	short loc_414918
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414918:				; CODE XREF: sub_4148D0+42j
		mov	edx, [ebp+var_8]
		movzx	eax, word ptr [edx+18h]
		cmp	eax, 10Bh
		jz	short loc_41492A
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41492A:				; CODE XREF: sub_4148D0+54j
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+74h], 0Eh
		ja	short loc_414937
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414937:				; CODE XREF: sub_4148D0+61j
		mov	edx, 8
		imul	eax, edx, 0Eh
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax+78h], 0
		jnz	short loc_41494D
		xor	al, al
		jmp	short loc_41494F
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41494D:				; CODE XREF: sub_4148D0+77j
		mov	al, 1

loc_41494F:				; CODE XREF: sub_4148D0+19j
					; sub_4148D0+2Bj ...
		mov	esp, ebp
		pop	ebp
		retn
sub_4148D0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Bh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414980	proc near		; CODE XREF: sub_4113CAj
		push	ebp
		mov	ebp, esp
		push	offset TopLevelExceptionFilter ; lpTopLevelExceptionFilter
		call	ds:SetUnhandledExceptionFilter
		pop	ebp
		retn
sub_414980	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4149A0	proc near		; CODE XREF: .text:00411082j
					; sub_4113E3j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_4149A0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4149B0	proc near		; CODE XREF: TopLevelExceptionFilterj

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	[ebp+var_4], ecx
		mov	edx, [ebp+var_4]
		cmp	dword ptr [edx], 0E06D7363h
		jnz	short loc_414A24
		mov	eax, [ebp+var_4]
		cmp	dword ptr [eax+10h], 3
		jnz	short loc_414A24
		mov	ecx, [ebp+var_4]
		cmp	dword ptr [ecx+14h], 19930520h
		jz	short loc_414A02
		mov	edx, [ebp+var_4]
		cmp	dword ptr [edx+14h], 19930521h
		jz	short loc_414A02
		mov	eax, [ebp+var_4]
		cmp	dword ptr [eax+14h], 19930522h
		jz	short loc_414A02
		mov	ecx, [ebp+var_4]
		cmp	dword ptr [ecx+14h], 1994000h
		jnz	short loc_414A24

loc_414A02:				; CODE XREF: sub_4149B0+2Cj
					; sub_4149B0+38j ...
		call	j___current_exception
		mov	edx, [ebp+var_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	[ebp+var_8], ecx
		call	j___current_exception_context
		mov	edx, [ebp+var_8]
		mov	[eax], edx
		call	j_terminate

loc_414A24:				; CODE XREF: sub_4149B0+17j
					; sub_4149B0+20j ...
		xor	eax, eax
		mov	esp, ebp
		pop	ebp
		retn	4
sub_4149B0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 9 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414A50	proc near		; CODE XREF: sub_41114Aj
		push	ebp
		mov	ebp, esp
		mov	dword_41C564, 0
		pop	ebp
		retn
sub_414A50	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_414A70	proc near		; CODE XREF: sub_41118Bj
		push	esi
		mov	esi, offset dword_41A8E4
		mov	eax, esi
		cmp	eax, offset dword_41AAE8
		jnb	short loc_414A9C
		push	edi

loc_414A80:				; CODE XREF: sub_414A70+29j
		mov	edi, [esi]
		test	edi, edi
		jz	short loc_414A90
		mov	ecx, edi
		call	ds:off_41F000
		call	edi

loc_414A90:				; CODE XREF: sub_414A70+14j
		add	esi, 4
		cmp	esi, offset dword_41AAE8
		jb	short loc_414A80
		pop	edi

loc_414A9C:				; CODE XREF: sub_414A70+Dj
		pop	esi
		retn
sub_414A70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл


sub_414AB0	proc near		; CODE XREF: sub_41130Cj
		push	esi
		mov	esi, offset dword_41ABF0
		mov	eax, esi
		cmp	eax, offset dword_41ADF4
		jnb	short loc_414ADC
		push	edi

loc_414AC0:				; CODE XREF: sub_414AB0+29j
		mov	edi, [esi]
		test	edi, edi
		jz	short loc_414AD0
		mov	ecx, edi
		call	ds:off_41F000
		call	edi

loc_414AD0:				; CODE XREF: sub_414AB0+14j
		add	esi, 4
		cmp	esi, offset dword_41ADF4
		jb	short loc_414AC0
		pop	edi

loc_414ADC:				; CODE XREF: sub_414AB0+Dj
		pop	esi
		retn
sub_414AB0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414AF0	proc near		; CODE XREF: sub_4155C0+14p
					; DATA XREF: sub_412B50+Ao ...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	sub_4112E4
		add	esp, 4
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset sub_411244
		push	offset dword_41C004
		call	j__except_handler4_common
		add	esp, 18h
		pop	ebp
		retn
sub_414AF0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 5 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414B40	proc near		; CODE XREF: sub_4111F9j

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		mov	[ebp+var_4], ecx
		mov	esp, ebp
		pop	ebp
		retn
sub_414B40	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414B50	proc near		; CODE XREF: sub_411023j

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	[ebp+var_4], ecx
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_414B50	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414B70	proc near		; CODE XREF: sub_41136Bj

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		push	eax
		call	sub_411023
		add	esp, 4
		pop	ebp
		retn
sub_414B70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_414B90:				; CODE XREF: .text:0041123Fj
		push	ebp
		mov	ebp, esp
		push	ecx
		push	offset off_41F000
		call	sub_41136B
		add	esp, 4
		cmp	eax, offset sub_4111F9
		jz	short loc_414BB1
		mov	dword ptr [ebp-4], 1
		jmp	short loc_414BB8
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414BB1:				; CODE XREF: .text:00414BA6j
		mov	dword ptr [ebp-4], 0

loc_414BB8:				; CODE XREF: .text:00414BAFj
		mov	eax, [ebp-4]
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414BD0	proc near		; CODE XREF: sub_415160+C9p

var_414		= dword	ptr -414h
var_20C		= dword	ptr -20Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 414h
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	byte_41C56C, 0
		jnz	loc_414D00
		mov	byte_41C56C, 1
		call	sub_414D60
		test	eax, eax
		jnz	loc_414D02
		push	offset aVcruntime140d_ ; "VCRUNTIME140D.dll"
		call	j___vcrt_GetModuleHandleW
		add	esp, 4
		test	eax, eax
		jz	short loc_414C8D
		push	104h
		lea	ecx, [ebp+var_414]
		push	ecx
		push	eax
		call	j___vcrt_GetModuleFileNameW
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_414C8D
		push	104h
		lea	eax, [ebp+var_20C]
		push	eax
		lea	eax, [ebp+var_414]
		push	eax
		call	sub_415050
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_414C8D
		push	900h
		lea	eax, [ebp+var_20C]
		push	0
		push	eax
		call	j___vcrt_LoadLibraryExW
		add	esp, 0Ch
		test	eax, eax
		jnz	loc_414D02
		call	ds:GetLastError
		cmp	eax, 57h
		jnz	short loc_414C8D
		push	8
		lea	eax, [ebp+var_20C]
		push	0
		push	eax
		call	j___vcrt_LoadLibraryExW
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_414D02

loc_414C8D:				; CODE XREF: sub_414BD0+43j
					; sub_414BD0+5Cj ...
		push	0A00h
		push	0
		push	offset aMspdb140 ; "MSPDB140"
		call	j___vcrt_LoadLibraryExW
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_414D02
		call	ds:GetLastError
		cmp	eax, 57h
		jnz	short loc_414D00
		push	104h
		lea	eax, [ebp+var_414]
		push	eax
		push	0
		call	j___vcrt_GetModuleFileNameW
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_414D00
		push	104h
		lea	eax, [ebp+var_20C]
		push	eax
		lea	eax, [ebp+var_414]
		push	eax
		call	sub_415050
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_414D00
		push	8
		lea	eax, [ebp+var_20C]
		push	0
		push	eax
		call	j___vcrt_LoadLibraryExW
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_414D02

loc_414D00:				; CODE XREF: sub_414BD0+1Aj
					; sub_414BD0+DEj ...
		xor	eax, eax

loc_414D02:				; CODE XREF: sub_414BD0+2Ej
					; sub_414BD0+95j ...
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_414BD0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 14h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_414D60	proc near		; CODE XREF: sub_414BD0+27p

var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= dword	ptr -1F8h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1EC		= word ptr -1ECh
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 21Ch
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		push	ebx
		push	esi
		push	edi
		push	800h
		push	0
		push	offset aApiMsWinCoreRe ; "api-ms-win-core-registry-l1-1-0.dll"
		call	j___vcrt_LoadLibraryExW
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_414DC9
		push	800h
		push	eax
		push	offset aAdvapi32_dll ; "advapi32.dll"
		call	j___vcrt_LoadLibraryExW
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jnz	short loc_414DC9
		call	ds:GetLastError
		cmp	eax, 57h
		jnz	short loc_414E2D
		push	edi
		push	edi
		push	offset aAdvapi32_dll ; "advapi32.dll"
		call	j___vcrt_LoadLibraryExW
		mov	edi, eax
		add	esp, 0Ch
		test	edi, edi
		jz	short loc_414E2D

loc_414DC9:				; CODE XREF: sub_414D60+2Ej
					; sub_414D60+47j
		push	offset ProcName	; "RegOpenKeyExW"
		push	edi		; hModule
		call	ds:GetProcAddress
		mov	esi, eax
		test	esi, esi
		jz	short loc_414E2D
		push	offset aRegqueryvaluee ; "RegQueryValueExW"
		push	edi		; hModule
		call	ds:GetProcAddress
		mov	ebx, eax
		test	ebx, ebx
		jz	short loc_414E2D
		push	offset aRegclosekey ; "RegCloseKey"
		push	edi		; hModule
		call	ds:GetProcAddress
		mov	[ebp+var_218], eax
		test	eax, eax
		jz	short loc_414E2D
		lea	eax, [ebp+var_210]
		mov	ecx, esi
		push	eax
		push	1
		push	0
		push	offset aSoftwareWow643 ; "SOFTWARE\\Wow6432Node\\Microsoft\\VisualSt"...
		push	80000002h
		call	ds:off_41F000
		call	esi
		test	eax, eax
		jz	short loc_414E40
		push	edi		; hLibModule
		call	ds:FreeLibrary

loc_414E2D:				; CODE XREF: sub_414D60+52j
					; sub_414D60+67j ...
		pop	edi
		pop	esi
		xor	eax, eax
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_414E40:				; CODE XREF: sub_414D60+C4j
		lea	eax, [ebp+var_214]
		mov	[ebp+var_214], 208h
		push	eax
		lea	eax, [ebp+var_20C]
		mov	ecx, ebx
		push	eax
		lea	eax, [ebp+var_21C]
		push	eax
		push	0
		push	offset aProductdir ; "ProductDir"
		push	[ebp+var_210]
		call	ds:off_41F000
		call	ebx
		push	[ebp+var_210]
		mov	ebx, [ebp+var_218]
		mov	esi, eax
		mov	ecx, ebx
		call	ds:off_41F000
		call	ebx
		push	edi		; hLibModule
		call	ds:FreeLibrary
		test	esi, esi
		jnz	short loc_414E2D
		cmp	[ebp+var_21C], 1
		jnz	short loc_414E2D
		mov	ecx, [ebp+var_214]
		test	cl, 1
		jnz	short loc_414E2D
		shr	ecx, 1
		mov	edx, ecx
		cmp	ecx, 2
		jb	loc_414E2D
		dec	ecx
		lea	eax, [ebp+var_20C]
		cmp	[eax+ecx*2], si
		lea	eax, [eax+ecx*2]
		jnz	loc_414E2D
		cmp	word ptr [eax-2], 5Ch
		jz	short loc_414EDF
		mov	ecx, 5Ch
		mov	[eax], cx
		mov	ecx, edx

loc_414EDF:				; CODE XREF: sub_414D60+173j
		mov	eax, ecx
		not	eax
		cmp	eax, 12h
		jb	loc_414E2D
		lea	eax, [ecx+11h]
		cmp	eax, 104h
		ja	loc_414E2D
		mov	eax, ds:dword_41A318
		mov	[ebp+ecx*2+var_20C], eax
		mov	eax, ds:dword_41A31C
		mov	[ebp+ecx*2+var_208], eax
		mov	eax, ds:dword_41A320
		mov	[ebp+ecx*2+var_204], eax
		mov	eax, ds:dword_41A324
		mov	[ebp+ecx*2+var_200], eax
		mov	eax, ds:dword_41A328
		mov	[ebp+ecx*2+var_1FC], eax
		mov	eax, ds:dword_41A32C
		mov	[ebp+ecx*2+var_1F8], eax
		mov	eax, ds:dword_41A330
		mov	[ebp+ecx*2+var_1F4], eax
		mov	eax, ds:dword_41A334
		mov	[ebp+ecx*2+var_1F0], eax
		mov	ax, ds:word_41A338
		push	900h
		mov	[ebp+ecx*2+var_1EC], ax
		lea	eax, [ebp+var_20C]
		push	0
		push	eax
		call	j___vcrt_LoadLibraryExW
		mov	esi, eax
		add	esp, 0Ch
		test	esi, esi
		jnz	short loc_414FA3
		call	ds:GetLastError
		cmp	eax, 57h
		jnz	short loc_414FA3
		push	8
		lea	eax, [ebp+var_20C]
		push	esi
		push	eax
		call	j___vcrt_LoadLibraryExW
		add	esp, 0Ch
		mov	esi, eax

loc_414FA3:				; CODE XREF: sub_414D60+222j
					; sub_414D60+22Dj
		mov	ecx, [ebp+var_4]
		mov	eax, esi
		pop	edi
		pop	esi
		xor	ecx, ebp
		pop	ebx
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_414D60	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 26h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415050	proc near		; CODE XREF: sub_414BD0+71p
					; sub_414BD0+10Dp

var_60C		= dword	ptr -60Ch
var_40C		= dword	ptr -40Ch
var_20C		= dword	ptr -20Ch
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 60Ch
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		lea	ecx, [ebp+var_20C]
		push	esi
		mov	esi, [ebp+arg_4]
		push	100h
		push	ecx
		push	100h
		lea	ecx, [ebp+var_40C]
		push	ecx
		push	100h
		lea	ecx, [ebp+var_60C]
		push	ecx
		push	3
		lea	ecx, [ebp+var_C]
		push	ecx
		push	eax
		call	j__wsplitpath_s
		add	esp, 24h
		test	eax, eax
		jnz	short loc_415112
		push	offset aMspdb140_0 ; "MSPDB140"
		lea	eax, [ebp+var_40C]
		push	9
		push	eax
		call	j_wcscpy_s
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_415112
		push	offset aDll	; "DLL"
		lea	eax, [ebp+var_20C]
		push	4
		push	eax
		call	j_wcscpy_s
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_415112
		lea	eax, [ebp+var_20C]
		push	eax
		lea	eax, [ebp+var_40C]
		push	eax
		lea	eax, [ebp+var_60C]
		push	eax
		lea	eax, [ebp+var_C]
		push	eax
		push	[ebp+arg_8]
		push	esi
		call	j__wmakepath_s
		add	esp, 18h
		test	eax, eax
		jnz	short loc_415112
		mov	eax, 1
		pop	esi
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415112:				; CODE XREF: sub_415050+4Fj
					; sub_415050+69j ...
		mov	ecx, [ebp+var_4]
		xor	eax, eax
		xor	ecx, ebp
		pop	esi
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
sub_415050	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 0Fh dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415160	proc near		; CODE XREF: sub_4113FCj

Buffer		= _MEMORY_BASIC_INFORMATION ptr	-4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_C]
		sub	esp, 4Ch
		xor	ecx, ecx
		push	ebx
		push	esi
		mov	esi, [ebp+arg_0]
		mov	dword ptr [eax], 0
		dec	esi
		mov	eax, [ebp+arg_4]
		push	edi
		push	1Ch		; dwLength
		mov	[eax], cx
		lea	eax, [ebp+Buffer]
		push	eax		; lpBuffer
		push	esi		; lpAddress
		call	ds:VirtualQuery
		test	eax, eax
		jz	loc_4154D7
		push	[ebp+arg_14]
		push	[ebp+arg_10]
		push	[ebp+Buffer.AllocationBase]
		call	j___vcrt_GetModuleFileNameW
		add	esp, 0Ch
		test	eax, eax
		jz	loc_4154D7
		mov	eax, [ebp+Buffer.AllocationBase]
		mov	ecx, 5A4Dh
		cmp	[eax], cx
		jnz	loc_4154D7
		mov	ecx, [eax+3Ch]
		test	ecx, ecx
		jle	loc_4154D7
		add	ecx, eax
		cmp	dword ptr [ecx], 4550h
		jnz	loc_4154D7
		movzx	edx, word ptr [ecx+14h]
		sub	esi, eax
		movzx	edi, word ptr [ecx+6]
		add	edx, 20h
		xor	ebx, ebx
		xor	eax, eax
		test	edi, edi
		jz	short loc_415207
		add	ecx, edx
		lea	ecx, [ecx+0]

loc_4151F0:				; CODE XREF: sub_415160+A5j
		mov	edx, [ecx+4]
		cmp	esi, edx
		jb	short loc_4151FF
		mov	ebx, esi
		sub	ebx, edx
		cmp	esi, [ecx]
		jb	short loc_415207

loc_4151FF:				; CODE XREF: sub_415160+95j
		inc	eax
		add	ecx, 28h
		cmp	eax, edi
		jb	short loc_4151F0

loc_415207:				; CODE XREF: sub_415160+89j
					; sub_415160+9Dj
		cmp	eax, edi
		jz	loc_4154D7
		inc	eax
		cmp	byte_41C56D, 0
		mov	[ebp+var_C], eax
		jnz	short loc_415244
		cmp	hModule, 0
		jnz	loc_4154D7
		call	sub_414BD0
		mov	hModule, eax
		test	eax, eax
		jz	loc_4154D7
		mov	byte_41C56D, 1
		jmp	short loc_415249
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415244:				; CODE XREF: sub_415160+BAj
		mov	eax, hModule

loc_415249:				; CODE XREF: sub_415160+E2j
		push	offset aPdbopenvalidat ; "PDBOpenValidate5"
		push	eax		; hModule
		call	ds:GetProcAddress
		mov	esi, eax
		test	esi, esi
		jz	loc_4154D7
		lea	eax, [ebp+var_18]
		mov	ecx, esi
		push	eax
		push	0
		push	0
		lea	eax, [ebp+var_30]
		push	eax
		push	0
		push	0
		push	0
		push	[ebp+arg_10]
		call	ds:off_41F000
		call	esi
		add	esp, 20h
		test	eax, eax
		jz	loc_4154D7
		mov	edi, [ebp+var_18]
		mov	[ebp+var_8], 0
		mov	[ebp+var_24], 0
		mov	eax, [edi]
		mov	esi, [eax]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		cmp	eax, 1329141h
		jnz	loc_4153F4
		mov	edi, [ebp+var_18]
		mov	eax, [edi]
		mov	esi, [eax+1Ch]
		lea	eax, [ebp+var_20]
		push	eax
		push	offset aR	; "r"
		push	0
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	eax, eax
		jz	loc_4153F4
		mov	edi, [ebp+var_20]
		push	0
		push	0
		push	0
		mov	eax, [edi]
		mov	esi, [eax+20h]
		lea	eax, [ebp+var_14]
		push	eax
		push	ebx
		push	[ebp+var_C]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	eax, eax
		jz	loc_4153E0
		mov	edi, [ebp+var_14]
		mov	eax, [edi]
		mov	esi, [eax+68h]
		lea	eax, [ebp+var_8]
		push	eax
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	al, al
		jz	loc_4153CC
		mov	edi, [ebp+var_8]
		test	edi, edi
		jz	loc_4153CC
		mov	eax, [edi]
		mov	esi, [eax+8]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	eax, eax
		jz	short loc_4153A7

loc_415346:				; CODE XREF: sub_415160+245j
		mov	edi, [ebp+var_8]
		push	0
		mov	eax, [edi]
		mov	esi, [eax+0Ch]
		lea	eax, [ebp+var_10]
		push	eax
		lea	eax, [ebp+var_28]
		mov	ecx, esi
		push	eax
		lea	eax, [ebp+var_4]
		push	eax
		lea	eax, [ebp+var_1C]
		push	eax
		push	0
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	al, al
		jz	short loc_4153B9
		movzx	eax, word ptr [ebp+var_4]
		cmp	eax, [ebp+var_C]
		jnz	short loc_41538F
		mov	ecx, [ebp+var_1C]
		cmp	ecx, ebx
		ja	short loc_41538F
		mov	eax, [ebp+var_28]
		add	eax, ecx
		cmp	ebx, eax
		jb	loc_415412

loc_41538F:				; CODE XREF: sub_415160+219j
					; sub_415160+220j
		mov	edi, [ebp+var_8]
		mov	eax, [edi]
		mov	esi, [eax+8]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		test	eax, eax
		jnz	short loc_415346

loc_4153A7:				; CODE XREF: sub_415160+1E4j
		xor	ecx, ecx

loc_4153A9:				; CODE XREF: sub_415160+307j
					; sub_415160+312j ...
		push	ecx		; lpMem
		push	0		; dwFlags
		call	ds:GetProcessHeap
		push	eax		; hHeap
		call	ds:HeapFree

loc_4153B9:				; CODE XREF: sub_415160+210j
					; sub_415160+2B7j ...
		mov	edi, [ebp+var_8]
		mov	eax, [edi]
		mov	esi, [eax]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi

loc_4153CC:				; CODE XREF: sub_415160+1C0j
					; sub_415160+1CBj
		mov	edi, [ebp+var_14]
		mov	eax, [edi]
		mov	esi, [eax+40h]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi

loc_4153E0:				; CODE XREF: sub_415160+1A0j
		mov	edi, [ebp+var_20]
		mov	eax, [edi]
		mov	esi, [eax+38h]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi

loc_4153F4:				; CODE XREF: sub_415160+14Fj
					; sub_415160+176j
		mov	edi, [ebp+var_18]
		mov	edx, [edi]
		mov	esi, [edx+2Ch]
		mov	ecx, esi
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		mov	eax, [ebp+var_24]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415412:				; CODE XREF: sub_415160+229j
		mov	esi, [ebp+var_10]
		test	esi, esi
		jz	short loc_4153B9
		cmp	esi, 1FFFFFFFh
		jnb	short loc_4153B9
		shl	esi, 3
		call	ds:GetProcessHeap
		push	esi		; dwBytes
		push	0		; dwFlags
		push	eax		; hHeap
		call	ds:HeapAlloc
		mov	[ebp+var_C], eax
		test	eax, eax
		jz	loc_4153B9
		mov	edi, [ebp+var_8]
		push	eax
		lea	eax, [ebp+var_10]
		push	eax
		mov	ecx, [edi]
		lea	eax, [ebp+var_2C]
		push	0
		push	0
		push	0
		mov	esi, [ecx+0Ch]
		mov	ecx, esi
		push	eax
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		mov	ecx, [ebp+var_C]
		test	al, al
		jz	loc_4153A9
		sub	ebx, [ebp+var_1C]
		cmp	ebx, [ecx]
		jb	loc_4153A9
		mov	edx, [ebp+var_10]
		mov	eax, 1
		cmp	edx, eax
		jbe	short loc_41548E

loc_415484:				; CODE XREF: sub_415160+32Cj
		cmp	ebx, [ecx+eax*8]
		jb	short loc_41548E
		inc	eax
		cmp	eax, edx
		jb	short loc_415484

loc_41548E:				; CODE XREF: sub_415160+322j
					; sub_415160+327j
		mov	eax, [ecx+eax*8-4]
		mov	ecx, [ebp+arg_C]
		and	eax, 0FFFFFFh
		mov	edi, [ebp+var_14]
		push	0
		push	0
		mov	[ecx], eax
		mov	eax, [edi]
		push	0
		mov	esi, [eax+70h]
		lea	eax, [ebp+arg_8]
		push	eax
		push	[ebp+arg_4]
		mov	ecx, esi
		push	[ebp+var_2C]
		call	ds:off_41F000
		mov	ecx, edi
		call	esi
		mov	ecx, [ebp+var_C]
		test	al, al
		jz	loc_4153A9
		mov	[ebp+var_24], 1
		jmp	loc_4153A9
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4154D7:				; CODE XREF: sub_415160+2Dj
					; sub_415160+46j ...
		pop	edi
		pop	esi
		xor	eax, eax
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
sub_415160	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 38h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_4155C0	proc near		; DATA XREF: sub_413530+Ao

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ecx
		mov	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		call	sub_414AF0
		add	esp, 10h
		mov	[ebp+var_4], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		and	edx, 66h
		jnz	short loc_415614
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax], 0E06D7363h
		jnz	short loc_415614
		cmp	[ebp+var_4], 1
		jnz	short loc_415614
		call	j___current_exception
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		call	j___current_exception_context
		mov	edx, [ebp+arg_8]
		mov	[eax], edx
		call	j_terminate

loc_415614:				; CODE XREF: sub_4155C0+28j
					; sub_4155C0+33j ...
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_4155C0	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 9 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415640:				; CODE XREF: sub_41100Aj
		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		mov	eax, dword_41C004
		xor	eax, ebp
		mov	[ebp-4], eax
		push	ebx
		push	esi
		mov	dword_41C570, 0
		mov	eax, dword_41C02C
		or	eax, 1
		mov	dword_41C02C, eax
		push	0Ah
		call	j_IsProcessorFeaturePresent
		test	eax, eax
		jnz	short loc_41567B
		xor	eax, eax
		jmp	loc_415962
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_41567B:				; CODE XREF: .text:00415672j
		mov	dword ptr [ebp-10h], 0
		mov	dword ptr [ebp-0Ch], 0
		mov	dword ptr [ebp-8], 0
		lea	esi, [ebp-20h]
		xor	eax, eax
		xor	ecx, ecx
		cpuid
		mov	[esi], eax
		mov	[esi+4], ebx
		mov	[esi+8], ecx
		mov	[esi+0Ch], edx
		mov	ecx, 4
		imul	edx, ecx, 0
		mov	eax, [ebp+edx-20h]
		mov	[ebp-38h], eax
		mov	ecx, 4
		shl	ecx, 0
		mov	edx, [ebp+ecx-20h]
		xor	edx, 756E6547h
		mov	eax, 4
		imul	ecx, eax, 3
		mov	eax, [ebp+ecx-20h]
		xor	eax, 49656E69h
		or	edx, eax
		mov	ecx, 4
		shl	ecx, 1
		mov	eax, [ebp+ecx-20h]
		xor	eax, 6C65746Eh
		or	edx, eax
		jnz	short loc_4156F5
		mov	dword ptr [ebp-2Ch], 1
		jmp	short loc_4156FC
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4156F5:				; CODE XREF: .text:004156EAj
		mov	dword ptr [ebp-2Ch], 0

loc_4156FC:				; CODE XREF: .text:004156F3j
		mov	cl, [ebp-2Ch]
		mov	[ebp-21h], cl
		lea	esi, [ebp-20h]
		mov	eax, 1
		xor	ecx, ecx
		cpuid
		mov	[esi], eax
		mov	[esi+4], ebx
		mov	[esi+8], ecx
		mov	[esi+0Ch], edx
		mov	edx, 4
		imul	eax, edx, 0
		mov	ecx, [ebp+eax-20h]
		mov	[ebp-28h], ecx
		movzx	edx, byte ptr [ebp-21h]
		test	edx, edx
		jz	short loc_41579F
		mov	eax, [ebp-28h]
		and	eax, 0FFF3FF0h
		cmp	eax, 106C0h
		jz	short loc_415792
		mov	ecx, [ebp-28h]
		and	ecx, 0FFF3FF0h
		cmp	ecx, 20660h
		jz	short loc_415792
		mov	edx, [ebp-28h]
		and	edx, 0FFF3FF0h
		cmp	edx, 20670h
		jz	short loc_415792
		mov	eax, [ebp-28h]
		and	eax, 0FFF3FF0h
		cmp	eax, 30650h
		jz	short loc_415792
		mov	ecx, [ebp-28h]
		and	ecx, 0FFF3FF0h
		cmp	ecx, 30660h
		jz	short loc_415792
		mov	edx, [ebp-28h]
		and	edx, 0FFF3FF0h
		cmp	edx, 30670h
		jnz	short loc_41579F

loc_415792:				; CODE XREF: .text:0041573Dj
					; .text:0041574Ej ...
		mov	eax, dword_41C574
		or	eax, 1
		mov	dword_41C574, eax

loc_41579F:				; CODE XREF: .text:0041572Ej
					; .text:00415790j
		mov	ecx, 4
		imul	edx, ecx, 3
		mov	eax, 4
		imul	ecx, eax, 0
		mov	edx, [ebp+edx-20h]
		mov	[ebp+ecx-10h], edx
		mov	eax, 4
		shl	eax, 1
		mov	ecx, 4
		shl	ecx, 0
		mov	edx, [ebp+eax-20h]
		mov	[ebp+ecx-10h], edx
		cmp	dword ptr [ebp-38h], 7
		jl	short loc_415825
		lea	esi, [ebp-20h]
		mov	eax, 7
		xor	ecx, ecx
		cpuid
		mov	[esi], eax
		mov	[esi+4], ebx
		mov	[esi+8], ecx
		mov	[esi+0Ch], edx
		mov	eax, 4
		shl	eax, 0
		mov	ecx, 4
		shl	ecx, 1
		mov	edx, [ebp+eax-20h]
		mov	[ebp+ecx-10h], edx
		mov	eax, 4
		shl	eax, 0
		mov	ecx, [ebp+eax-20h]
		and	ecx, 200h
		jz	short loc_415825
		mov	edx, dword_41C574
		or	edx, 2
		mov	dword_41C574, edx

loc_415825:				; CODE XREF: .text:004157D2j
					; .text:00415814j
		mov	dword_41C570, 1
		mov	eax, dword_41C02C
		or	eax, 2
		mov	dword_41C02C, eax
		mov	ecx, 4
		shl	ecx, 0
		mov	edx, [ebp+ecx-10h]
		and	edx, 100000h
		jz	loc_415960
		mov	dword_41C570, 2
		mov	eax, dword_41C02C
		or	eax, 4
		mov	dword_41C02C, eax
		mov	ecx, 4
		shl	ecx, 0
		mov	edx, [ebp+ecx-10h]
		and	edx, 8000000h
		jz	loc_415960
		mov	eax, 4
		shl	eax, 0
		mov	ecx, [ebp+eax-10h]
		and	ecx, 10000000h
		jz	loc_415960
		xor	ecx, ecx
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		db 0Fh,	1, 0D0h
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		mov	[ebp-34h], eax
		mov	[ebp-30h], edx
		mov	edx, [ebp-34h]
		mov	eax, [ebp-30h]
		and	edx, 6
		and	eax, 0
		mov	[ebp-40h], edx
		mov	[ebp-3Ch], eax
		cmp	dword ptr [ebp-40h], 6
		jnz	loc_415960
		cmp	dword ptr [ebp-3Ch], 0
		jnz	loc_415960
		mov	dword_41C570, 3
		mov	ecx, dword_41C02C
		or	ecx, 8
		mov	dword_41C02C, ecx
		mov	edx, 4
		shl	edx, 1
		mov	eax, [ebp+edx-10h]
		and	eax, 20h
		jz	short loc_415960
		mov	dword_41C570, 5
		mov	ecx, dword_41C02C
		or	ecx, 20h
		mov	dword_41C02C, ecx
		mov	edx, 4
		shl	edx, 1
		mov	eax, [ebp+edx-10h]
		and	eax, 0D0030000h
		cmp	eax, 0D0030000h
		jnz	short loc_415960
		mov	ecx, [ebp-34h]
		mov	edx, [ebp-30h]
		and	ecx, 0E0h
		and	edx, 0
		mov	[ebp-48h], ecx
		mov	[ebp-44h], edx
		cmp	dword ptr [ebp-48h], 0E0h
		jnz	short loc_415960
		cmp	dword ptr [ebp-44h], 0
		jnz	short loc_415960
		mov	dword_41C570, 6
		mov	eax, dword_41C02C
		or	eax, 40h
		mov	dword_41C02C, eax

loc_415960:				; CODE XREF: .text:0041584Ej
					; .text:0041587Dj ...
		xor	eax, eax

loc_415962:				; CODE XREF: .text:00415676j
		pop	esi
		pop	ebx
		mov	ecx, [ebp-4]
		xor	ecx, ebp
		call	sub_411244
		mov	esp, ebp
		pop	ebp
		retn
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 4
		dd 33h dup(0CCCCCCCCh)

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415A40	proc near		; CODE XREF: sub_4110F5j

var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ecx
		cmp	dword_41C030, 0
		jz	short loc_415A56
		mov	[ebp+var_4], 1
		jmp	short loc_415A5D
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415A56:				; CODE XREF: sub_415A40+Bj
		mov	[ebp+var_4], 0

loc_415A5D:				; CODE XREF: sub_415A40+14j
		mov	eax, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_415A40	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		dd 2 dup(0CCCCCCCCh)
		db 0CCh
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415A6D:				; CODE XREF: .text:loc_41112Cj
		jmp	ds:__CxxFrameHandler3
; [00000006 BYTES: COLLAPSED FUNCTION __std_type_info_destroy_list. PRESS KEYPAD "+" TO	EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __current_exception. PRESS KEYPAD	"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __current_exception_context. PRESS KEYPAD	"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION memset. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _except_handler4_common. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_GetModuleFileNameW. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_GetModuleHandleW. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_LoadLibraryExW. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION strlen. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CrtDbgReport. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CrtDbgReportW. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_exe. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _set_app_type. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __setusermatherr.	PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _configure_narrow_argv. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initialize_narrow_environment. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _get_initial_narrow_environment. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e. PRESS KEYPAD	"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _exit. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _set_fmode. PRESS	KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __p___argc. PRESS	KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __p___argv. PRESS	KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _cexit. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _c_exit. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _register_thread_local_exe_atexit_callback. PRESS	KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _configthreadlocale. PRESS KEYPAD	"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _set_new_mode. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __p__commode. PRESS KEYPAD "+" TO	EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION strcpy_s.	PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION strcat_s.	PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __stdio_common_vsprintf_s. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_dll. PRESS KEYPAD "+"	TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initialize_onexit_table.	PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _register_onexit_function. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _execute_onexit_table. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _crt_atexit. PRESS KEYPAD	"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _crt_at_quick_exit. PRESS	KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _controlfp_s. PRESS KEYPAD "+" TO	EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION terminate. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _wmakepath_s. PRESS KEYPAD "+" TO	EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _wsplitpath_s. PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION wcscpy_s.	PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B7B:				; CODE XREF: .text:00411361j
		jmp	ds:GetCurrentThreadId
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B81:				; CODE XREF: .text:00411028j
		jmp	ds:IsDebuggerPresent
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B87:				; CODE XREF: .text:00411375j
		jmp	ds:RaiseException
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B8D:				; CODE XREF: .text:00411159j
		jmp	ds:MultiByteToWideChar
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B93:				; CODE XREF: .text:004111D1j
		jmp	ds:WideCharToMultiByte
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B99:				; CODE XREF: .text:004112EEj
		jmp	ds:UnhandledExceptionFilter
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415B9F:				; CODE XREF: .text:00411163j
		jmp	ds:SetUnhandledExceptionFilter
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BA5:				; CODE XREF: .text:0041105Aj
		jmp	ds:GetCurrentProcess
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BAB:				; CODE XREF: .text:00411253j
		jmp	ds:TerminateProcess
; [00000006 BYTES: COLLAPSED FUNCTION IsProcessorFeaturePresent. PRESS KEYPAD "+" TO EXPAND]
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BB7:				; CODE XREF: .text:0041129Ej
		jmp	ds:QueryPerformanceCounter
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BBD:				; CODE XREF: .text:00411221j
		jmp	ds:GetCurrentProcessId
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BC3:				; CODE XREF: .text:00411203j
		jmp	ds:GetSystemTimeAsFileTime
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BC9:				; CODE XREF: .text:00411019j
		jmp	ds:InitializeSListHead
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BCF:				; CODE XREF: .text:00411145j
		jmp	ds:GetStartupInfoW
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BD5:				; CODE XREF: .text:00411118j
		jmp	ds:GetModuleHandleW
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BDB:				; CODE XREF: .text:00411032j
		jmp	ds:GetLastError
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BE1:				; CODE XREF: .text:00411091j
		jmp	ds:HeapAlloc
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BE7:				; CODE XREF: .text:00411398j
		jmp	ds:HeapFree
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BED:				; CODE XREF: .text:004113E8j
		jmp	ds:GetProcessHeap
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BF3:				; CODE XREF: .text:004113BBj
		jmp	ds:VirtualQuery
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BF9:				; CODE XREF: .text:004112B2j
		jmp	ds:FreeLibrary
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415BFF:				; CODE XREF: .text:004113C5j
		jmp	ds:GetProcAddress
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C10	proc near		; CODE XREF: .text:00411096j
					; sub_411177j ...
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_415C10	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C20	proc near		; CODE XREF: sub_4110D7j
					; .text:004110E1j ...
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_415C20	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C30	proc near		; CODE XREF: sub_4110C3j
					; .text:004112CBj ...
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_415C30	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C40	proc near		; CODE XREF: sub_4110A0j sub_41110Ej ...
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_415C40	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C50	proc near		; CODE XREF: .text:004110B9j
					; sub_411320j ...
		push	ebp
		mov	ebp, esp
		mov	al, 1
		pop	ebp
		retn
sub_415C50	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C60	proc near		; CODE XREF: sub_4110CDj
					; .text:00411294j
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		pop	ebp
		retn
sub_415C60	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

; ллллллллллллллл S U B	R O U T	I N E ллллллллллллллллллллллллллллллллллллллл

; Attributes: bp-based frame

sub_415C70	proc near		; CODE XREF: .text:0041120Dj
					; sub_4112E4j

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 54h
		cmp	dword_41C570, 1
		jge	short loc_415C87
		mov	eax, [ebp+arg_0]
		jmp	loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415C87:				; CODE XREF: sub_415C70+Dj
		cmp	[ebp+arg_0], 0C00002B4h
		jz	short loc_415CA1
		cmp	[ebp+arg_0], 0C00002B5h
		jz	short loc_415CA1
		mov	eax, [ebp+arg_0]
		jmp	loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415CA1:				; CODE XREF: sub_415C70+1Ej
					; sub_415C70+27j
		mov	[ebp+var_C], 1
		mov	[ebp+var_10], 2
		mov	[ebp+var_14], 4
		mov	[ebp+var_18], 8
		mov	[ebp+var_1C], 10h
		mov	[ebp+var_20], 20h
		mov	[ebp+var_24], 3Fh
		mov	[ebp+var_28], 80h
		mov	[ebp+var_2C], 100h
		mov	[ebp+var_30], 200h
		mov	[ebp+var_34], 400h
		mov	[ebp+var_38], 800h
		mov	[ebp+var_3C], 1000h
		mov	[ebp+var_40], 81h
		mov	[ebp+var_44], 102h
		mov	[ebp+var_48], 204h
		mov	[ebp+var_4C], 408h
		mov	[ebp+var_50], 810h
		mov	[ebp+var_54], 1020h
		stmxcsr	[ebp+var_8]
		mov	eax, [ebp+var_8]
		xor	eax, 3Fh
		mov	[ebp+var_4], eax
		mov	ecx, [ebp+var_4]
		and	ecx, 81h
		jnz	short loc_415D45
		mov	eax, 0C0000090h
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D45:				; CODE XREF: sub_415C70+CCj
		mov	edx, [ebp+var_4]
		and	edx, 204h
		jnz	short loc_415D57
		mov	eax, 0C000008Eh
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D57:				; CODE XREF: sub_415C70+DEj
		mov	eax, [ebp+var_4]
		and	eax, 102h
		jnz	short loc_415D68
		mov	eax, 0C0000090h
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D68:				; CODE XREF: sub_415C70+EFj
		mov	ecx, [ebp+var_4]
		and	ecx, 408h
		jnz	short loc_415D7A
		mov	eax, 0C0000091h
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D7A:				; CODE XREF: sub_415C70+101j
		mov	edx, [ebp+var_4]
		and	edx, 810h
		jnz	short loc_415D8C
		mov	eax, 0C0000093h
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D8C:				; CODE XREF: sub_415C70+113j
		mov	eax, [ebp+var_4]
		and	eax, 1020h
		jnz	short loc_415D9D
		mov	eax, 0C000008Fh
		jmp	short loc_415DA0
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_415D9D:				; CODE XREF: sub_415C70+124j
		mov	eax, [ebp+arg_0]

loc_415DA0:				; CODE XREF: sub_415C70+12j
					; sub_415C70+2Cj ...
		mov	esp, ebp
		pop	ebp
		retn
sub_415C70	endp

; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
dword_415DA4	dd 507h	dup(0CCCCCCCCh), 0E9B44D8Dh, 0FFFF9F5Ah
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4171C8:				; DATA XREF: sub_411810+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-168h]
		xor	ecx, eax
		call	sub_411244
		mov	ecx, [edx-8]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41AFAC
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
dword_4171F0	dd 4 dup(0CCCCCCCCh), 0E9EC4D8Bh, 0FFFF9E57h
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_417208:				; DATA XREF: sub_411EB0+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0E8h]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41B00C
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h

loc_417230:				; DATA XREF: sub_412020+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0ECh]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41AFDC
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_417260:				; DATA XREF: sub_412110+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41B034
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_417290:				; DATA XREF: sub_4123D0+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0D0h]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41AF48
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4172C0:				; DATA XREF: sub_412460+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0D4h]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41AF20
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		align 10h
		dd 4 dup(0CCCCCCCCh)
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_4172F0:				; DATA XREF: sub_412520+5o
		mov	edx, [esp+8]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0D0h]
		xor	ecx, eax
		call	sub_411244
		mov	eax, offset dword_41AEF8
		jmp	loc_41112C
; ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ'
		db 'ЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ',0
		align 100h
_text		ends

; Section 3. (virtual address 00019000)
; Virtual size			: 000021F0 (   8688.)
; Section size in file		: 00002200 (   8704.)
; Offset to raw	data for section: 00007800
; Flags	40000040: Data Readable
; Alignment	: default
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 419000h
dword_419000	dd 41h dup(0)		; DATA XREF: sub_412B50+B4o
		dd offset sub_412B10
		dd 40h dup(0)
dword_419208	dd 41h dup(0)		; DATA XREF: sub_412B50:loc_412BFFo
dword_41930C	dd 41h dup(0)		; DATA XREF: sub_412B50+88o
		dd offset sub_412A20
		dd 40h dup(0)
		dd offset sub_412B00
		dd 40h dup(0)
dword_419618	dd 146h	dup(0)		; DATA XREF: sub_412B50+83o
aJuniorALaProd	db 'junior a la prod',0Ah,0 ; DATA XREF: sub_4125B0:loc_412606o
		align 8
aSimultanIe	db 'simultanУЉe',0Ah,0  ; DATA XREF: sub_4122C0+28o
		align 4
aEnChelou	db 'en chelou',0        ; DATA XREF: sub_412660+28o
		align 8
off_419B68	dd offset aTheValueOfEspW ; DATA XREF: .text:004130C2r
					; "The value of	ESP was	not properly saved"...
		dd offset aACastToASmalle ; "A cast to a smaller data type has cause"...
		dd offset aStackMemoryWas ; "Stack memory was corrupted\r\n"
		dd offset aALocalVariable ; "A local variable was used before it was"...
		dd offset aStackMemoryAro ; "Stack memory around _alloca was corrupt"...
off_419B7C	dd offset aUnknownRuntime ; DATA XREF: .text:loc_4130DEr
					; "Unknown Runtime Check Error\r\n"
dword_419B80	dd 1			; DATA XREF: sub_4132B0+AEr
		align 8
		dd 4 dup(1)
aStackAroundThe	db 'Stack around the variable ',27h,0 ; DATA XREF: sub_413120+3Fo
aWasCorrupted_	db 27h,' was corrupted.',0 ; DATA XREF: sub_413120+67o
		align 4
aTheVariable	db 'The variable ',27h,0 ; DATA XREF: .text:0041360Ao
		align 4
aIsBeingUsedWit	db 27h,' is being used without being initialized.',0
					; DATA XREF: .text:00413632o
		align 4
		dd 9 dup(0)
aTheValueOfEspW	db 'The value of ESP was not properly saved across a function call.  '
					; DATA XREF: .rdata:off_419B68o
		db 'This is usually a result of calling a function declared with one '
		db 'calling convention with a function pointer declared with a differ'
		db 'ent calling convention.',0Dh,0Ah,0
		align 4
		dd 0Ch dup(0)
aACastToASmalle	db 'A cast to a smaller data type has caused a loss of data.  If this'
					; DATA XREF: .rdata:00419B6Co
		db ' was intentional, you should mask the source of the cast with the'
		db ' appropriate bitmask.  For example:  ',0Dh,0Ah
		db 9,'char c = (i & 0xFF);',0Dh,0Ah
		db 'Changing the code in this way will not affect the quality of the '
		db 'resulting optimized code.',0Dh,0Ah,0
		align 4
		dd 0Eh dup(0)
aStackMemoryWas	db 'Stack memory was corrupted',0Dh,0Ah,0 ; DATA XREF: .rdata:00419B70o
		align 10h
		dd 0
aALocalVariable	db 'A local variable was used before it was initialized',0Dh,0Ah,0
					; DATA XREF: .rdata:00419B74o
		align 4
		dd 2 dup(0)
aStackMemoryAro	db 'Stack memory around _alloca was corrupted',0Dh,0Ah,0
					; DATA XREF: .rdata:00419B78o
		dd 2 dup(0)
aUnknownRuntime	db 'Unknown Runtime Check Error',0Dh,0Ah,0 ; DATA XREF: .rdata:off_419B7Co
		align 10h
aRuntimeCheckEr:			; DATA XREF: sub_4132B0:loc_413340o
		unicode	0, <Runtime Check Error.>
		dw 0Dh
		dw 0Ah
		unicode	0, < Unable to display RTC Message.>,0
		dd 7 dup(0)
aRunTimeCheckFa:			; DATA XREF: sub_4132B0+12Bo
		unicode	0, <Run-Time Check Failure #%d - %s>,0
		dd 3 dup(0)
aUnknownFilenam	db 'Unknown Filename',0 ; DATA XREF: sub_4132B0+15Do
		align 4
aUnknownModuleN	db 'Unknown Module Name',0 ; DATA XREF: sub_4132B0+192o
		align 10h
aRunTimeCheck_0	db 'Run-Time Check Failure #%d - %s',0 ; DATA XREF: sub_4132B0+1CCo
		dd 2 dup(0)
aStackCorrupted	db 'Stack corrupted near unknown variable',0
					; DATA XREF: sub_413120:loc_4131A8o
		align 10h
		dd 2 dup(0)
a_2x		db '%.2X ',0            ; DATA XREF: sub_413200+3Bo
		align 10h
aStackAreaAroun	db 'Stack area around _alloca memory reserved by this function is cor'
					; DATA XREF: sub_412F90+34o
		db 'rupted',0Ah,0
		align 4
		dd 3 dup(0)
asc_41A108:				; DATA XREF: sub_412F90+6Eo
		dw 0Ah
		unicode	0, <>,0
asc_41A10C	db '> ',0               ; DATA XREF: sub_412F90+77o
		align 10h
aData		db 0Ah			; DATA XREF: sub_412F90+83o
		db 'Data: <',0
		align 4
aAllocationNumb	db 0Ah			; DATA XREF: sub_412F90+8Eo
		db 'Allocation number within this function: ',0
		align 10h
aSize		db 0Ah			; DATA XREF: sub_412F90+94o
		db 'Size: ',0
		dd 0
aAddress0x	db 0Ah			; DATA XREF: sub_412F90+9Ao
		db 'Address: 0x',0
		align 10h
aStackAreaAro_0	db 'Stack area around _alloca memory reserved by this function is cor'
					; DATA XREF: sub_412F90+9Fo
		db 'rupted',0
		dd 4 dup(0)
aSSPSZdSDSSSSS	db '%s%s%p%s%zd%s%d%s%s%s%s%s',0 ; DATA XREF: sub_412F90+A4o
		align 8
aAVariableIsBei	db 'A variable is being used without being initialized.',0
					; DATA XREF: .text:loc_413653o
		dd 3 dup(0)
off_41A228	dd offset dword_41C150	; DATA XREF: sub_413770+F5o
					; sub_4138D0+C4o ...
		dd offset dword_41C1A0
		dd 0
off_41A234	dd offset aStackPointerCo ; DATA XREF: .text:00413B7Br
					; "Stack pointer corruption"
		dd offset aCastToSmallerT ; "Cast to smaller type causing loss of da"...
		dd offset aStackMemoryCor ; "Stack memory corruption"
		dd offset aLocalVariableU ; "Local variable used before	initializati"...
		dd offset aStackAround_al ; "Stack around _alloca corrupted"
		dd 0
aStackPointerCo	db 'Stack pointer corruption',0 ; DATA XREF: .rdata:off_41A234o
		align 4
		dd 0
aCastToSmallerT	db 'Cast to smaller type causing loss of data',0
					; DATA XREF: .rdata:0041A238o
		align 10h
aStackMemoryCor	db 'Stack memory corruption',0 ; DATA XREF: .rdata:0041A23Co
		dd 0
aLocalVariableU	db 'Local variable used before initialization',0
					; DATA XREF: .rdata:0041A240o
		align 10h
aStackAround_al	db 'Stack around _alloca corrupted',0 ; DATA XREF: .rdata:0041A244o
		align 10h
		dd 2 dup(0)
dword_41A318	dd 690062h		; DATA XREF: sub_414D60+19Ar
dword_41A31C	dd 5C006Eh		; DATA XREF: sub_414D60+1A6r
dword_41A320	dd 53004Dh		; DATA XREF: sub_414D60+1B2r
dword_41A324	dd 440050h		; DATA XREF: sub_414D60+1BEr
dword_41A328	dd 310042h		; DATA XREF: sub_414D60+1CAr
dword_41A32C	dd 300034h		; DATA XREF: sub_414D60+1D6r
dword_41A330	dd 44002Eh		; DATA XREF: sub_414D60+1E2r
dword_41A334	dd 4C004Ch		; DATA XREF: sub_414D60+1EEr
word_41A338	dw 0			; DATA XREF: sub_414D60+1FAr
		align 4
aVcruntime140d_:			; DATA XREF: sub_414BD0+34o
		unicode	0, <VCRUNTIME140D.dll>,0
		dd 4 dup(0)
aApiMsWinCoreRe:			; DATA XREF: sub_414D60+1Do
		unicode	0, <api-ms-win-core-registry-l1-1-0.dll>,0
		dd 4 dup(0)
aAdvapi32_dll:				; DATA XREF: sub_414D60+36o
					; sub_414D60+56o
		unicode	0, <advapi32.dll>,0
		align 8
; char ProcName[]
ProcName	db 'RegOpenKeyExW',0    ; DATA XREF: sub_414D60:loc_414DC9o
		align 4
; char aRegqueryvaluee[]
aRegqueryvaluee	db 'RegQueryValueExW',0 ; DATA XREF: sub_414D60+7Bo
		align 4
; char aRegclosekey[]
aRegclosekey	db 'RegCloseKey',0      ; DATA XREF: sub_414D60+8Do
		align 10h
aSoftwareWow643:			; DATA XREF: sub_414D60+B0o
		unicode	0, <SOFTWARE\Wow6432Node\Microsoft\VisualStudio\14.0\Setup\VC>
		unicode	0, <>,0
		dd 6 dup(0)
aProductdir:				; DATA XREF: sub_414D60+103o
		unicode	0, <ProductDir>,0
		align 8
aDll:					; DATA XREF: sub_415050+6Bo
		unicode	0, <DLL>,0
		dd 0
aMspdb140_0:				; DATA XREF: sub_415050+51o
		unicode	0, <MSPDB140>,0
		align 4
		dd 0
aMspdb140:				; DATA XREF: sub_414BD0+C4o
		unicode	0, <MSPDB140>,0
		align 10h
		dd 0
; char aPdbopenvalidat[]
aPdbopenvalidat	db 'PDBOpenValidate5',0 ; DATA XREF: sub_415160:loc_415249o
		align 4
aR:					; DATA XREF: sub_415160+161o
		unicode	0, <r>,0
		dd 2 dup(0)
		dd 60762A1Fh, 0
		dd 2, 62h, 1A750h, 8F50h, 0
		dd 60762A1Fh, 0
		dd 0Ch,	14h, 1A7B4h, 8FB4h, 0A4h, 0Eh dup(0)
		dd offset dword_41C004
		dd 2 dup(0)
		dd offset off_41F000
		dd 3 dup(0)
		dd 100h, 67h dup(0)
		dd 53445352h, 2256330Dh, 447FBB89h, 3DC5DDBFh, 9FE822FEh
		dd 2, 555C3A43h, 73726573h, 6974555Ch, 6173696Ch, 72756574h
		dd 756F735Ch, 5C656372h, 6F706572h, 65545C73h, 614D7473h
		dd 7261776Ch, 6F6E4965h, 6265445Ch, 545C6775h, 4D747365h
		dd 61776C61h, 6E496572h, 64702E6Fh, 62h, 0
		dd 2 dup(27h), 1, 26h, 47h dup(0)
dword_41A8E4	dd 40h dup(0)		; DATA XREF: sub_414A70+1o
		dd offset sub_411325
		dd 40h dup(0)
dword_41AAE8	dd 42h dup(0)		; DATA XREF: sub_414A70+8o
					; sub_414A70+23o
dword_41ABF0	dd 40h dup(0)		; DATA XREF: sub_414AB0+1o
		dd offset sub_4111D6
		dd 40h dup(0)
dword_41ADF4	dd 41h dup(0)		; DATA XREF: sub_414AB0+8o
					; sub_414AB0+23o
dword_41AEF8	dd 19930522h, 7	dup(0)	; DATA XREF: .text:00417304o
		dd 5, 0
dword_41AF20	dd 19930522h, 7	dup(0)	; DATA XREF: .text:004172D4o
		dd 5, 0
dword_41AF48	dd 19930522h, 7	dup(0)	; DATA XREF: .text:004172A4o
		dd 5, 0
dword_41AF70	dd 40h,	2 dup(0)	; DATA XREF: .rdata:0041AF90o
		dd offset loc_411BF4
dword_41AF80	dd 2 dup(1), 2,	1	; DATA XREF: .rdata:0041AFBCo
		dd offset dword_41AF70
dword_41AF94	dd 0FFFFFFFFh		; DATA XREF: .rdata:0041AFB4o
		dd offset dword_415DA4+141Ch
		dd 4 dup(0)
dword_41AFAC	dd 19930522h, 3		; DATA XREF: .text:004171E6o
		dd offset dword_41AF94
		dd 1
		dd offset dword_41AF80
		dd 3 dup(0)
		dd 1, 3	dup(0)
dword_41AFDC	dd 19930522h, 7	dup(0)	; DATA XREF: .text:00417244o
		dd 5, 0
dword_41B004	dd 0FFFFFFFFh		; DATA XREF: .rdata:0041B014o
		dd offset dword_4171F0+10h
dword_41B00C	dd 19930522h, 1		; DATA XREF: .text:0041721Co
		dd offset dword_41B004
		dd 5 dup(0)
		dd 1, 0
dword_41B034	dd 19930522h, 7	dup(0)	; DATA XREF: .text:00417274o
		dd 5, 2	dup(0)
dword_41B060	dd 0FFFFFFFEh, 0	; DATA XREF: sub_412B50+5o
		dd 0FFFFFFACh, 0
		dd 0FFFFFFFEh
		dd offset loc_412CF3
		dd offset loc_412D0E
		align 10h
dword_41B080	dd 0FFFFFFFEh, 0	; DATA XREF: sub_413530+5o
		dd 0FFFFFFD8h, 0
		dd 0FFFFFFFEh
		dd offset loc_41357E
		dd offset loc_413591
		align 10h
dword_41B0A0	dd 0FFFFFFFEh, 0	; DATA XREF: sub_4140E0+5o
		dd 0FFFFFFB8h, 0
		dd 0FFFFFFFEh
		dd offset loc_4141B6
		dd offset loc_4141DD
		align 200h
_rdata		ends

; Section 4. (virtual address 0001C000)
; Virtual size			: 000005A0 (   1440.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00009A00
; Flags	C0000040: Data Readable	Writable
; Alignment	: default
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 41C000h
dword_41C000	dd 44BF19B1h		; DATA XREF: sub_413770+EBr
					; sub_414480+24w ...
dword_41C004	dd 0BB40E64Eh		; DATA XREF: sub_411810+2Dr
					; sub_411EB0+2Er ...
		dd 0
dword_41C00C	dd 1			; DATA XREF: .text:004130BBr
					; .text:00413C0Br ...
		dd 1
dword_41C014	dd 1			; DATA XREF: sub_413120+1Cr
dword_41C018	dd 1			; DATA XREF: .text:004135E8r
dword_41C01C	dd 1			; DATA XREF: sub_412F90+1Br
		dd 0
		dd 0FFFFFFFFh
dword_41C028	dd 1			; DATA XREF: sub_414680+4r
dword_41C02C	dd 1			; DATA XREF: .text:0041565Cr
					; .text:00415664w ...
dword_41C030	dd 1			; DATA XREF: sub_415A40+4r
		dd 41h dup(0)
byte_41C138	db 0			; DATA XREF: sub_4129C0r
					; sub_4129C0+13w
		align 10h
dword_41C140	dd 4 dup(0)		; DATA XREF: sub_4136B0o
dword_41C150	dd 0			; DATA XREF: sub_413770+A1w
					; sub_4138D0+95w ...
dword_41C154	dd 0			; DATA XREF: sub_413770+ABw
					; sub_4138D0+9Fw ...
		dd 0
dword_41C15C	dd 0			; DATA XREF: sub_413770+9Cw
					; sub_4138D0+90w ...
dword_41C160	dd 0			; DATA XREF: sub_413770+B5w
					; sub_4138D0+A9w ...
dword_41C164	dd 0			; DATA XREF: sub_413770+C7w
					; sub_4138D0+BEw ...
dword_41C168	dd 0			; DATA XREF: .text:00413AEEw
		dd 0Dh dup(0)
dword_41C1A0	dd 0			; DATA XREF: sub_413770+8Dw
					; .rdata:0041A22Co
		dd 17h dup(0)
		dd 0Bh dup(?)
word_41C22C	dw ?			; DATA XREF: sub_413770+61w
					; sub_4138D0+5Fw ...
		align 10h
word_41C230	dw ?			; DATA XREF: sub_413770+5Aw
					; sub_4138D0+58w ...
		align 4
word_41C234	dw ?			; DATA XREF: sub_413770+53w
					; sub_4138D0+51w ...
		align 4
word_41C238	dw ?			; DATA XREF: sub_413770+4Cw
					; sub_4138D0+4Aw ...
		align 4
dword_41C23C	dd ?			; DATA XREF: sub_413770+38w
					; sub_4138D0+36w ...
dword_41C240	dd ?			; DATA XREF: sub_413770+32w
					; sub_4138D0+30w ...
dword_41C244	dd ?			; DATA XREF: sub_413770+2Cw
					; sub_4138D0+2Aw ...
dword_41C248	dd ?			; DATA XREF: sub_413770+26w
					; sub_4138D0+24w ...
dword_41C24C	dd ?			; DATA XREF: sub_413770+20w
					; sub_4138D0+1Ew ...
dword_41C250	dd ?			; DATA XREF: sub_413770:loc_41378Bw
					; sub_4138D0:loc_4138E9w ...
dword_41C254	dd ?			; DATA XREF: sub_413770+72w
					; sub_4138D0+70w ...
dword_41C258	dd ?			; DATA XREF: sub_413770+7Aw
					; sub_413770+97r ...
word_41C25C	dw ?			; DATA XREF: sub_413770+45w
					; sub_4138D0+43w ...
		align 10h
dword_41C260	dd ?			; DATA XREF: sub_413770+69w
					; sub_4138D0+67w ...
dword_41C264	dd ?			; DATA XREF: sub_413770+82w
					; sub_4138D0+80w ...
word_41C268	dw ?			; DATA XREF: sub_413770+3Ew
					; sub_4138D0+3Cw ...
		align 4
		dd 0A8h	dup(?)
dword_41C50C	dd ?			; DATA XREF: sub_413B50r
					; .text:00413BA3r ...
dword_41C510	dd ?			; DATA XREF: sub_413B60r
					; .text:00413BB1w ...
		align 8
dword_41C518	dd ?			; DATA XREF: sub_412B50+5Er
					; sub_412B50:loc_412BC0r ...
dword_41C51C	dd ?			; DATA XREF: sub_413D80+21o
					; sub_414260+1Ao
byte_41C520	db ?			; DATA XREF: sub_413F70+9w
					; sub_414290+3r
byte_41C521	db ?			; DATA XREF: sub_413FD0+6r
					; sub_413FD0:loc_414095w
		align 4
dword_41C524	dd ?			; DATA XREF: .text:00413F1Co
					; sub_413FD0+3Ao ...
dword_41C528	dd ?			; DATA XREF: sub_413FD0+8Bw
dword_41C52C	dd ?			; DATA XREF: sub_413FD0+94w
dword_41C530	dd ?			; DATA XREF: sub_413FD0:loc_41401Fo
					; sub_413FD0+AEw ...
dword_41C534	dd ?			; DATA XREF: sub_413FD0+B7w
dword_41C538	dd ?			; DATA XREF: sub_413FD0+C0w
		dd 3 dup(?)
dword_41C548	dd 4 dup(?)		; DATA XREF: sub_414580+3o
					; .text:004145A3o
dword_41C558	dd 3 dup(?)		; DATA XREF: sub_414620+3o
dword_41C564	dd ?			; DATA XREF: sub_414A50+3w
; HMODULE hModule
hModule		dd ?			; DATA XREF: sub_415160+BCr
					; sub_415160+CEw ...
byte_41C56C	db ?			; DATA XREF: sub_414BD0+13r
					; sub_414BD0+20w
byte_41C56D	db ?			; DATA XREF: sub_415160+B0r
					; sub_415160+DBw
		align 10h
dword_41C570	dd ?			; DATA XREF: .text:00415652w
					; .text:loc_415825w ...
dword_41C574	dd ?			; DATA XREF: .text:loc_415792r
					; .text:0041579Aw ...
		dd ?
dword_41C57C	dd 3 dup(?)		; DATA XREF: sub_4146C0+3o
dword_41C588	dd 3 dup(?)		; DATA XREF: sub_4146B0+3o
dword_41C594	dd ?			; DATA XREF: sub_412930+19r
					; sub_412930+28r
		align 10h
_data		ends

; Section 5. (virtual address 0001D000)
; Virtual size			: 00000F43 (   3907.)
; Section size in file		: 00001000 (   4096.)
; Offset to raw	data for section: 00009C00
; Flags	40000040: Data Readable
; Alignment	: default
;
; Imports from KERNEL32.dll
;
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Externs
; _idata
; BOOL __stdcall HeapFree(HANDLE hHeap,DWORD dwFlags,LPVOID lpMem)
		extrn HeapFree:dword	; DATA XREF: sub_415160+253r
					; .text:loc_415BE7r
; BOOL IsDebuggerPresent(void)
		extrn IsDebuggerPresent:dword ;	DATA XREF: sub_4132B0+DFr
					; sub_4146D0+DAr ...
; void __stdcall RaiseException(DWORD dwExceptionCode,DWORD dwExceptionFlags,DWORD nNumberOfArguments,const DWORD *lpArguments)
		extrn RaiseException:dword ; DATA XREF:	sub_413530+46r
					; .text:loc_415B87r
; int __stdcall	MultiByteToWideChar(UINT CodePage,DWORD	dwFlags,LPCSTR lpMultiByteStr,int cchMultiByte,LPWSTR lpWideCharStr,int	cchWideChar)
		extrn MultiByteToWideChar:dword	; DATA XREF: sub_4132B0+61r
					; sub_4132B0+80r ...
; int __stdcall	WideCharToMultiByte(UINT CodePage,DWORD	dwFlags,LPCWSTR	lpWideCharStr,int cchWideChar,LPSTR lpMultiByteStr,int cchMultiByte,LPCSTR lpDefaultChar,LPBOOL	lpUsedDefaultChar)
		extrn WideCharToMultiByte:dword	; DATA XREF: sub_4132B0+173r
					; sub_4132B0+1A8r ...
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn UnhandledExceptionFilter:dword ; DATA XREF: sub_413730+Fr
					; sub_4146D0+110r ...
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn SetUnhandledExceptionFilter:dword	; DATA XREF: sub_413730+5r
					; sub_4146D0+106r ...
; HANDLE GetCurrentProcess(void)
		extrn GetCurrentProcess:dword ;	DATA XREF: sub_413730+1Ar
					; .text:loc_415BA5r
; BOOL __stdcall TerminateProcess(HANDLE hProcess,UINT uExitCode)
		extrn TerminateProcess:dword ; DATA XREF: sub_413730+21r
					; .text:loc_415BABr
; BOOL __stdcall IsProcessorFeaturePresent(DWORD ProcessorFeature)
		extrn __imp_IsProcessorFeaturePresent:dword
					; DATA XREF: IsProcessorFeaturePresentr
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn QueryPerformanceCounter:dword ; DATA XREF: sub_4143F0+43r
					; .text:loc_415BB7r
; DWORD	GetCurrentProcessId(void)
		extrn GetCurrentProcessId:dword	; DATA XREF: sub_4143F0+33r
					; .text:loc_415BBDr
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn GetSystemTimeAsFileTime:dword ; DATA XREF: sub_4143F0+12r
					; .text:loc_415BC3r
		extrn InitializeSListHead:dword	; DATA XREF: sub_414580+8r
					; .text:loc_415BC9r
; FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)
		extrn GetProcAddress:dword ; DATA XREF:	sub_414D60+6Fr
					; sub_414D60+81r ...
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn FreeLibrary:dword	; DATA XREF: sub_414D60+C7r
					; sub_414D60+12Fr ...
; DWORD	__stdcall VirtualQuery(LPCVOID lpAddress,PMEMORY_BASIC_INFORMATION lpBuffer,DWORD dwLength)
		extrn VirtualQuery:dword ; DATA	XREF: sub_415160+25r
					; .text:loc_415BF3r
; HANDLE GetProcessHeap(void)
		extrn GetProcessHeap:dword ; DATA XREF:	sub_415160+24Cr
					; sub_415160+2C4r ...
; DWORD	GetCurrentThreadId(void)
		extrn GetCurrentThreadId:dword ; DATA XREF: sub_412930+22r
					; sub_4143F0+27r ...
; LPVOID __stdcall HeapAlloc(HANDLE hHeap,DWORD	dwFlags,DWORD dwBytes)
		extrn HeapAlloc:dword	; DATA XREF: sub_415160+2CEr
					; .text:loc_415BE1r
; DWORD	GetLastError(void)
		extrn GetLastError:dword ; DATA	XREF: sub_414BD0+9Br
					; sub_414BD0+D5r ...
; HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName)
		extrn GetModuleHandleW:dword ; DATA XREF: sub_4148D0+8r
					; .text:loc_415BD5r
; void __stdcall GetStartupInfoW(LPSTARTUPINFOW	lpStartupInfo)
		extrn GetStartupInfoW:dword ; DATA XREF: .text:0041487Ar
					; .text:loc_415BCFr


;
; Imports from MSVCP140D.dll
;
; public: class	std::basic_ostream<char, struct	std::char_traits<char>>	& __thiscall std::basic_ostream<char, struct std::char_traits<char>>::flush(void)
		extrn ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:dword
					; DATA XREF: sub_411EB0+C6r
					; .text:loc_41271Dr
; public: void __thiscall std::basic_ostream<char, struct std::char_traits<char>>::_Osfx(void)
		extrn ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:dword
					; DATA XREF: sub_412110+5Fr
					; .text:loc_412717r
; public: char __thiscall std::basic_ios<char, struct std::char_traits<char>>::fill(void)const
		extrn ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:dword
					; DATA XREF: sub_411810+1D3r
					; sub_411810+326r ...
; public: class	std::basic_streambuf<char, struct std::char_traits<char>> * __thiscall std::basic_ios<char, struct std::char_traits<char>>::rdbuf(void)const
		extrn ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:dword
					; DATA XREF: sub_411810+1F5r
					; sub_411810+284r ...
; public: class	std::basic_ostream<char, struct	std::char_traits<char>>	* __thiscall std::basic_ios<char, struct std::char_traits<char>>::tie(void)const
		extrn ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:dword
					; DATA XREF: sub_411EB0+9Ar
					; .text:loc_412705r
; public: void __thiscall std::basic_ios<char, struct std::char_traits<char>>::setstate(int, bool)
		extrn ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:dword
					; DATA XREF: sub_411810+3F7r
					; sub_411810+42Dr ...
; public: __int64 __thiscall std::basic_streambuf<char,	struct std::char_traits<char>>::sputn(char const *, __int64)
		extrn ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:dword
					; DATA XREF: sub_411810+2ABr
					; .text:loc_4126F9r
; public: int __thiscall std::basic_streambuf<char, struct std::char_traits<char>>::sputc(char)
		extrn ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:dword
					; DATA XREF: sub_411810+218r
					; sub_411810+36Br ...
; public: __int64 __thiscall std::ios_base::width(__int64)
		extrn ?width@ios_base@std@@QAE_J_J@Z:dword ; DATA XREF:	sub_411810+3D5r
					; .text:loc_4126EDr
; public: __int64 __thiscall std::ios_base::width(void)const
		extrn ?width@ios_base@std@@QBE_JXZ:dword ; DATA	XREF: sub_411810+78r
					; sub_411810+B4r ...
; public: int __thiscall std::ios_base::flags(void)const
		extrn ?flags@ios_base@std@@QBEHXZ:dword	; DATA XREF: sub_411810+173r
					; .text:loc_4126E1r
; public: bool __thiscall std::ios_base::good(void)const
		extrn ?good@ios_base@std@@QBE_NXZ:dword	; DATA XREF: sub_411EB0+6Er
					; sub_411EB0+E2r ...
; class	std::basic_ostream<char, struct	std::char_traits<char>>	std::cout
		extrn ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:dword
					; DATA XREF: sub_4122C0+2Dr
					; sub_4125B0+5Br ...
; __declspec(dllimport)	bool __cdecl std::uncaught_exception(void)
		extrn __imp_?uncaught_exception@std@@YA_NXZ:dword
					; DATA XREF: std::uncaught_exception(void)r


;
; Imports from VCRUNTIME140D.dll
;
		extrn __imp___std_type_info_destroy_list:dword
					; DATA XREF: __std_type_info_destroy_listr
		extrn __imp___current_exception:dword ;	DATA XREF: __current_exceptionr
		extrn __imp___current_exception_context:dword
					; DATA XREF: __current_exception_contextr
; void *__cdecl	memset(void *,int,size_t)
		extrn __imp_memset:dword ; DATA	XREF: memsetr
		extrn __imp__except_handler4_common:dword
					; DATA XREF: _except_handler4_commonr
		extrn __imp___vcrt_GetModuleFileNameW:dword
					; DATA XREF: __vcrt_GetModuleFileNameWr
		extrn __imp___vcrt_GetModuleHandleW:dword
					; DATA XREF: __vcrt_GetModuleHandleWr
		extrn __imp___vcrt_LoadLibraryExW:dword	; DATA XREF: __vcrt_LoadLibraryExWr
		extrn __CxxFrameHandler3:dword ; DATA XREF: .text:loc_415A6Dr


;
; Imports from ucrtbased.dll
;
		extrn __imp___stdio_common_vsprintf_s:dword
					; DATA XREF: __stdio_common_vsprintf_sr
		extrn __imp__seh_filter_dll:dword ; DATA XREF: _seh_filter_dllr
		extrn __imp__initialize_onexit_table:dword
					; DATA XREF: _initialize_onexit_tabler
		extrn __imp__register_onexit_function:dword
					; DATA XREF: _register_onexit_functionr
		extrn __imp__execute_onexit_table:dword	; DATA XREF: _execute_onexit_tabler
		extrn __imp__crt_atexit:dword ;	DATA XREF: _crt_atexitr
		extrn __imp__crt_at_quick_exit:dword ; DATA XREF: _crt_at_quick_exitr
		extrn __imp__controlfp_s:dword ; DATA XREF: _controlfp_sr
		extrn __imp_terminate:dword ; DATA XREF: terminater
		extrn __imp__wmakepath_s:dword ; DATA XREF: _wmakepath_sr
		extrn __imp__wsplitpath_s:dword	; DATA XREF: _wsplitpath_sr
		extrn __imp_wcscpy_s:dword ; DATA XREF:	wcscpy_sr
		extrn __imp_strcpy_s:dword ; DATA XREF:	strcpy_sr
; void __cdecl exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
		extrn __imp__initterm_e:dword ;	DATA XREF: _initterm_er
		extrn __imp__initterm:dword ; DATA XREF: _inittermr
		extrn __imp__get_initial_narrow_environment:dword
					; DATA XREF: _get_initial_narrow_environmentr
		extrn __imp__initialize_narrow_environment:dword
					; DATA XREF: _initialize_narrow_environmentr
		extrn __imp__configure_narrow_argv:dword
					; DATA XREF: _configure_narrow_argvr
		extrn __imp___setusermatherr:dword ; DATA XREF:	__setusermatherrr
		extrn __imp__set_app_type:dword	; DATA XREF: _set_app_typer
		extrn __imp__seh_filter_exe:dword ; DATA XREF: _seh_filter_exer
		extrn __imp__CrtDbgReportW:dword ; DATA	XREF: _CrtDbgReportWr
		extrn __imp__CrtDbgReport:dword	; DATA XREF: _CrtDbgReportr
; size_t __cdecl strlen(const char *)
		extrn __imp_strlen:dword ; DATA	XREF: strlenr
		extrn __imp_strcat_s:dword ; DATA XREF:	strcat_sr
		extrn __imp___p__commode:dword ; DATA XREF: __p__commoder
		extrn __imp__set_new_mode:dword	; DATA XREF: _set_new_moder
		extrn __imp__configthreadlocale:dword ;	DATA XREF: _configthreadlocaler
; void __cdecl _exit(int)
		extrn __imp__exit:dword	; DATA XREF: _exitr
; void _c_exit(void)
		extrn __imp__c_exit:dword ; DATA XREF: _c_exitr
; void _cexit(void)
		extrn __imp__cexit:dword ; DATA	XREF: _cexitr
		extrn __imp___p___argv:dword ; DATA XREF: __p___argvr
		extrn __imp___p___argc:dword ; DATA XREF: __p___argcr
		extrn __imp__set_fmode:dword ; DATA XREF: _set_fmoder
		extrn __imp__register_thread_local_exe_atexit_callback:dword
					; DATA XREF: _register_thread_local_exe_atexit_callbackr


; Section 6. (virtual address 0001E000)
; Virtual size			: 00000137 (	311.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000AC00
; Flags	C0000040: Data Readable	Writable
; Alignment	: default
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure data
; Segment permissions: Read/Write
_msvcjmc	segment	para public 'DATA' use32
		assume cs:_msvcjmc
		;org 41E000h
		dd 6 dup(1010101h)
dword_41E018	dd 3 dup(1010101h)	; DATA XREF: sub_4123D0+3Do
					; sub_412460+3Do ...
		db 2 dup(1)
word_41E026	dw 101h			; DATA XREF: sub_412230+1Eo
					; sub_4122C0+1Eo ...
dword_41E028	dd 1010101h, 101h, 74h dup(0) ;	DATA XREF: sub_411810+44o
					; sub_411DF0+23o ...
_msvcjmc	ends

; Section 7. (virtual address 0001F000)
; Virtual size			: 00000104 (	260.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000AE00
; Flags	40000040: Data Readable
; Alignment	: default
; ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; Segment type:	Pure data
; Segment permissions: Read
_00cfg		segment	para public 'DATA' use32
		assume cs:_00cfg
		;org 41F000h
off_41F000	dd offset sub_4111F9	; DATA XREF: sub_412B50+118r
					; sub_4132B0+141r ...
		align 200h
_00cfg		ends


		end start
